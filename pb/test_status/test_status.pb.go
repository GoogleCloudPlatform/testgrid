/*
Copyright The TestGrid Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: test_status.proto

package test_status

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TestStatus int32

const (
	// Proto versions of test_status.py's GathererStatus
	// Note that: NO_RESULT is used to signal that there should be no change.
	// This must be updated every time a new GathererStatus is added.
	TestStatus_NO_RESULT         TestStatus = 0
	TestStatus_PASS              TestStatus = 1
	TestStatus_PASS_WITH_ERRORS  TestStatus = 2
	TestStatus_PASS_WITH_SKIPS   TestStatus = 3
	TestStatus_RUNNING           TestStatus = 4
	TestStatus_CATEGORIZED_ABORT TestStatus = 5
	TestStatus_UNKNOWN           TestStatus = 6
	TestStatus_CANCEL            TestStatus = 7
	TestStatus_BLOCKED           TestStatus = 8
	TestStatus_TIMED_OUT         TestStatus = 9
	TestStatus_CATEGORIZED_FAIL  TestStatus = 10
	TestStatus_BUILD_FAIL        TestStatus = 11
	TestStatus_FAIL              TestStatus = 12
	TestStatus_FLAKY             TestStatus = 13
	TestStatus_TOOL_FAIL         TestStatus = 14
	TestStatus_BUILD_PASSED      TestStatus = 15
)

// Enum value maps for TestStatus.
var (
	TestStatus_name = map[int32]string{
		0:  "NO_RESULT",
		1:  "PASS",
		2:  "PASS_WITH_ERRORS",
		3:  "PASS_WITH_SKIPS",
		4:  "RUNNING",
		5:  "CATEGORIZED_ABORT",
		6:  "UNKNOWN",
		7:  "CANCEL",
		8:  "BLOCKED",
		9:  "TIMED_OUT",
		10: "CATEGORIZED_FAIL",
		11: "BUILD_FAIL",
		12: "FAIL",
		13: "FLAKY",
		14: "TOOL_FAIL",
		15: "BUILD_PASSED",
	}
	TestStatus_value = map[string]int32{
		"NO_RESULT":         0,
		"PASS":              1,
		"PASS_WITH_ERRORS":  2,
		"PASS_WITH_SKIPS":   3,
		"RUNNING":           4,
		"CATEGORIZED_ABORT": 5,
		"UNKNOWN":           6,
		"CANCEL":            7,
		"BLOCKED":           8,
		"TIMED_OUT":         9,
		"CATEGORIZED_FAIL":  10,
		"BUILD_FAIL":        11,
		"FAIL":              12,
		"FLAKY":             13,
		"TOOL_FAIL":         14,
		"BUILD_PASSED":      15,
	}
)

func (x TestStatus) Enum() *TestStatus {
	p := new(TestStatus)
	*p = x
	return p
}

func (x TestStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TestStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_test_status_proto_enumTypes[0].Descriptor()
}

func (TestStatus) Type() protoreflect.EnumType {
	return &file_test_status_proto_enumTypes[0]
}

func (x TestStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TestStatus.Descriptor instead.
func (TestStatus) EnumDescriptor() ([]byte, []int) {
	return file_test_status_proto_rawDescGZIP(), []int{0}
}

var File_test_status_proto protoreflect.FileDescriptor

var file_test_status_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2a, 0x85, 0x02, 0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x41, 0x53, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x50,
	0x41, 0x53, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x53, 0x10,
	0x02, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x53, 0x53, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x53,
	0x4b, 0x49, 0x50, 0x53, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e,
	0x47, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x49, 0x5a,
	0x45, 0x44, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x4e, 0x43, 0x45,
	0x4c, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x08,
	0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x44, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x09, 0x12,
	0x14, 0x0a, 0x10, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x55, 0x49, 0x4c, 0x44, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x10, 0x0b, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x0c, 0x12,
	0x09, 0x0a, 0x05, 0x46, 0x4c, 0x41, 0x4b, 0x59, 0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x4f,
	0x4f, 0x4c, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x0e, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x55, 0x49,
	0x4c, 0x44, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x45, 0x44, 0x10, 0x0f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_test_status_proto_rawDescOnce sync.Once
	file_test_status_proto_rawDescData = file_test_status_proto_rawDesc
)

func file_test_status_proto_rawDescGZIP() []byte {
	file_test_status_proto_rawDescOnce.Do(func() {
		file_test_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_status_proto_rawDescData)
	})
	return file_test_status_proto_rawDescData
}

var file_test_status_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_test_status_proto_goTypes = []interface{}{
	(TestStatus)(0), // 0: TestStatus
}
var file_test_status_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_test_status_proto_init() }
func file_test_status_proto_init() {
	if File_test_status_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_status_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_status_proto_goTypes,
		DependencyIndexes: file_test_status_proto_depIdxs,
		EnumInfos:         file_test_status_proto_enumTypes,
	}.Build()
	File_test_status_proto = out.File
	file_test_status_proto_rawDesc = nil
	file_test_status_proto_goTypes = nil
	file_test_status_proto_depIdxs = nil
}
