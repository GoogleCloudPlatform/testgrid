syntax = "proto3";

// Protocol buffer for configuring testgrid.k8s.io

import "pb/custom_evaluator/custom_evaluator.proto";

// Specifies the test name, and its source
message TestNameConfig {
  // Specifies name elements to be selected from configuration values
  message NameElement {
    // A space-delimited string of labels
    string labels = 1;

    // Configuration value to use.
    // Valid choice are:
    // 'Tests name': The name of a test case
    // 'Commit': The commit number of the build
    // 'Context', 'Thread': The info extracted from each junit files:
    //    - junit_core-os_01.xml -> Context: core-os, Thread: 01
    //    - junit_runner.xml -> Context: runner
    //    - junit_01.xml -> Thread: 01
    // or any metadata key from finished.json, which is copied from your test suite.
    //
    // A valid sample TestNameConfig looks like:
    // test_name_config:
    //   name_elements:
    //   - target_config: Tests name
    //   - target_config: Context
    //   name_format: '%s [%s]'
    string target_config = 2;
    // Whether to use the build-target name
    bool build_target = 3;
    // A space-delimited string of Bazel build tags.
    string tags = 4;
    // The key of a test result's property.
    string test_property = 5;
  }

  // The name elements specifying the target test name for this tab.
  repeated NameElement name_elements = 1;

  // Specifies a printf-style format string for name elements. The format
  // string should have as many conversions as there are name_elements.
  // For example, two name_elements could be used with name_format="%s: %s".
  string name_format = 2;
}

// A single notification.
message Notification {
  // Required: Text summary of the issue or notice.
  string summary = 1;
  // Optional: Link to further information, such as a bug, email, document, etc.
  string context_link = 2;
}

// Specifies a group of tests to gather.
message TestGroup {
  // Name of this TestGroup, for mapping dashboard tabs to tests.
  string name = 1;

  // Path to the test result stored in gcs (some-bucket/some/optional/path).
  string gcs_prefix = 2;

  // Number of days of test results to gather and serve.
  int32 days_of_results = 3;

  // Whether to ignore pending (currently running) test results.
  bool ignore_pending = 4;

  reserved 5; // ignore_built

  enum TestsName {
    TESTS_NAME_UNSPECIFIED = 0;
    TESTS_NAME_IGNORE = 1;
    TESTS_NAME_REPLACE = 2;
    TESTS_NAME_APPEND = 3;
  }

  // What to do with the 'Tests name' configuration value. It can replace the
  // name of the test, be appended to the name of the test, or ignored. If it is
  // ignored, then the name of the tests will be the build target.
  TestsName tests_name_policy = 6;

  reserved 7;  // Unused gather_test_properties
  reserved 8; // ignore_test_substring

  // Custom column headers for defining extra column-heading rows from values in
  // the test result.
  message ColumnHeader {
    string label = 1;
    string property = 2;
    string configuration_value = 3;
  }
  repeated ColumnHeader column_header = 9;

  reserved 10; // fallback_grouping

  // DEPRECATED: use DashboardTabAlertOptions > alert_stale_result_hours
  int32 alert_stale_results_hours = 11 [deprecated = true];

  // DEPRECATED: use DashboardTabAlertOptions > num_failures_to_alert
  int32 num_failures_to_alert = 12 [deprecated = true];

  reserved 13; 

  // Default code search path for searching regressions. Overridden by
  // code_search_path in DashboardTab.
  string code_search_path = 14;

  // The number of columns to consider "recent" for a variety of purposes.
  int32 num_columns_recent = 15;

  // Whether to read test metadata from the test results. Information
  // from the test metadata is used to determine where bugs are filed in
  // specific cases.
  bool use_test_metadata = 16;

  reserved 17; // alert_mail_to_addresses
  reserved 18; // alert_mail_subject
  reserved 19; // alert_mail_failure_message
  reserved 20; // alert_mail_debug_url

  reserved 21; // min_elapsed_minutes_betwee_mails

  reserved 22; // No longer used

  reserved 23; // enable_flaky_status

  // disable_merged_status will restores deprecated behavior of
  // splitting multiple foo rows into foo [2], etc rather a single
  // potentially flaky row.
  bool disable_merged_status = 60;

  // deprecated - always set to true
  bool use_kubernetes_client = 24;

  // When use_kubernetes_client is on testgrid expects these results
  // to come from prow, which should include a prowjob.json and podinfo.json
  // to help debugging. If you do not expect these files to exist, you
  // can optionally disable this analysis.
  bool disable_prowjob_analysis = 62;

  // deprecated - always set to true
  bool is_external = 25;

  // Specifies the test name for a test.
  TestNameConfig test_name_config = 26;

  // A list of notifications attached to this test group.
  // This is displayed on any dashboard tab backed by this test group.
  repeated Notification notifications = 27;

  reserved 28; // Unused externally (column_sort_by)
  reserved 29; // primary_grouping
  reserved 30; // enable_test_methods
  reserved 31; // test_annotations
  reserved 32; // max_test_methods_per_test
  reserved 33; // commit_override_label_pattern
  reserved 34; // test_metadata_options
  reserved 35; // test_tag_pattern
  reserved 36; // auto_bug_options
  reserved 37; // max_test_runtime_hours

  // The number of consecutive test passes to close the alert.
  int32 num_passes_to_disable_alert = 38;

  reserved 39; // link_bugs_by_group

  reserved 40;

  reserved 41; // test_method_properties
  reserved 42; // gather_bugs

  // Numeric property metric value to be used for short text. If this property
  // is present, it will override all the other short text values.
  string short_text_metric = 43;

  reserved 44; // commit_override_configuration_value
  reserved 45; // link_bugs_by_test_methods
  reserved 46; // test_method_match_regex

  reserved 61; // test_method_unmatch_regex

  reserved 47; // use_full_method_names
  reserved 48; // custom_result_evaluator_rules
  reserved 49; // fallback_grouping_configuration_value
  reserved 50; // result_source
  reserved 51; // custom_evaluator_rule_set
  reserved 52; // read_state_from_storage

  // If true, only add the most recent result for a test when multiple results
  // for a test with the same name are encountered.
  bool ignore_old_results = 53;

  // If True, ignore the 'pass with skips' status (show as a blank cell).
  bool ignore_skip = 54;

  // A string containing python formatting specifiers that overrides the
  // commit with the date formatted according to this string. This is useful
  // for aggregating multiple columns that don't have a matching commit.
  string build_override_strftime = 55;

  reserved 56; // user_property

  reserved 58,59;

  // disable_prowjob_analysis 62
}

// Specifies a dashboard.
message Dashboard {
  // A list of the tabs on the dashboard.
  repeated DashboardTab dashboard_tab = 1;

  // A name for the Dashboard.
  string name = 2;

  // A list of notifications attached to this dashboard.
  // This is displayed on any dashboard tab in this dashboard.
  repeated Notification notifications = 3;

  reserved 4;  // Deprecated show_summary_first bool, unused

  // Control which tab is displayed when first opening a dashboard.
  // Defaults to Summary
  string default_tab = 5;

  // Controls whether to suppress highlighting of failing tabs.
  bool downplay_failing_tabs = 8;

  // Deprecated: Invert of 'downplay_failing_tabs'
  bool highlight_failing_tabs = 6 [deprecated=true];

  // Controls whether to apply special highlighting to result header columns for
  // the current day.
  bool highlight_today = 7;
}

message LinkTemplate {
  // The URL template.
  string url = 1;
  // The options templates.
  repeated LinkOptionsTemplate options = 2;
  // An optional name, used for the context menu
  string name = 3;
}

// A simple key/value pair for link options.
message LinkOptionsTemplate {
  // The key for the option. This is not expanded.
  string key = 1;

  // The value for the option. This is expanded the same as the LinkTemplate.
  string value = 2;
}

// A single tab on a dashboard.
message DashboardTab {
  // The name of the dashboard tab to display in the client.
  string name = 1;

  // The name of the TestGroup specifying the test results for this tab.
  string test_group_name = 2;

  // Default bug component for manually filing bugs from the dashboard
  int32 bug_component = 3;

  // Default code search path for searching regressions. This value overrides
  // the default in the TestGroup config so that dashboards may be customized
  // separately.
  string code_search_path = 4;

  // See TestGroup.num_columns_recent. This value overrides the default in the
  // TestGroup config so that dashboards may be customized separately.
  int32 num_columns_recent = 5;

  // Base options to always include, for example:
  // width=20&include-filter-by-regex=level_tests
  // This is taken from the #fragment part of the testgrid url.
  // Best way to create these is to setup the options on testgrid and then
  // copy the #fragment part.
  string base_options = 6;

  // The URL template to visit after clicking on a cell.
  LinkTemplate open_test_template = 7;

  // The URL template to visit when filing a bug.
  LinkTemplate file_bug_template = 8;

  // The URL template to visit when attaching a bug
  LinkTemplate attach_bug_template = 9;

  // Text to show in the about menu as a link to another view of the results.
  string results_text = 10;

  // The URL template to visit after clicking.
  LinkTemplate results_url_template = 11;

  // The URL template to visit when searching for code changes, such as pull requests
  LinkTemplate code_search_url_template = 12;

  // A description paragraph to be displayed.
  string description = 13;

  // A regular expression that uses the named group syntax to specify how to
  // show names in a table.
  string tabular_names_regex = 14;

  // Configuration options for dashboard tab alerts.
  DashboardTabAlertOptions alert_options = 15;

  // Configuration options for dashboard tab flakiness alerts.
  DashboardTabFlakinessAlertOptions flakiness_alert_options = 24;

  // A URL for the "About this Dashboard" menu option
  string about_dashboard_url = 16;

  // The URL template to visit when viewing an associated bug.
  LinkTemplate open_bug_template = 17;

  // If true, auto-file bugs when new alerts occur. This requires that the
  // backing test group has `bug_component` set and uses the backing test
  // group's `auto_bug_options`.
  bool auto_file_bugs = 18;

  // Display user local time on the dashboard when set to true (by default).
  // If false, uses Pacific Timezone for this DashboardTab.
  bool display_local_time = 19;

  // A set of optional LinkTemplates that will become right-click context menu
  // items.
  // TODO(b/159042168) in the near future this should be re-implemented as a
  // generic list of repeated LinkTemplates which users may specify in their
  // reqpective configurations as right-click context menus with names and
  // actions upon being clicked.
  LinkTemplate context_menu_template = 20;

  // When specified, treat a tab as BROKEN as long as one of the most recent
  // columns are "broken" (ratio of failed to total tests exceeds <threshold>).
  float broken_column_threshold = 21;

  reserved 22;

  // Options for the configuration of the flakiness analysis tool, on a per tab basis
  HealthAnalysisOptions health_analysis_options = 23;
}

// Configuration options for dashboard tab alerts.
message DashboardTabAlertOptions {
  // Time in hours before an alert will be added to a test results table if the
  // run date of the latest results are older than this time.  If zero, no
  // alerts are raised.
  int32 alert_stale_results_hours = 1;

  // The number of consecutive test result failures to see before alerting of
  // a consistent failure. If zero, no alerts are raised.
  int32 num_failures_to_alert = 2;

  // The comma-separated addresses to send mail.
  string alert_mail_to_addresses = 3;

  // The number of consecutive test passes to close the alert.
  int32 num_passes_to_disable_alert = 4;

  // Custom subject for alert mails.
  string subject = 5;

  // Custom link for further help/instructions on debugging this alert.
  string debug_url = 6;

  // Custom text to show for the debug link.
  string debug_message = 7;

  // Wait time between emails. If unset or zero, an email will be sent only once
  // it becomes a consistent failure, and not again until it succeeds.
  // TestGrid does not pester about staleness
  int32 wait_minutes_between_emails = 8;

  // A custom message
  string alert_mail_failure_message = 9;
}

// Configuration options for dashboard tab flakiness alerts.
message DashboardTabFlakinessAlertOptions {
  // The minimum amount of flakiness needed to trigger a flakiness alert.
  // 0=Disable alerts
  // This is a percentage; expected values go from 0 to 100 (100 = 100% flaky)
  float minimum_flakiness_to_alert = 1;

  // The comma-separated addresses to send mail.
  string alert_mail_to_addresses = 2;

  // Custom subject for alert mails.
  string subject = 3;

  // Minimum time between sending mails.
  int32 wait_minutes_between_emails = 4;

  // A custom message
  // TODO(RonWeber): This should be a template
  string alert_mail_failure_message = 5;
}

// Specifies a dashboard group.
message DashboardGroup {
  // The name for the dashboard group.
  string name = 1;

  // A list of names specifying dashboards to show links to in a separate tabbed
  // bar at the top of the page for each of the given dashboards.
  repeated string dashboard_names = 2;
}

// A service configuration consisting of multiple test groups and dashboards.
message Configuration {
  // A list of groups of tests to gather.
  repeated TestGroup test_groups = 1;

  // A list of all of the dashboards for a server.
  repeated Dashboard dashboards = 2;

  // A list of all the dashboard groups for a server.
  repeated DashboardGroup dashboard_groups = 3;
}

// A grouping of configuration options for the flakiness analysis tool.
// Later configuration options could include the ability to choose different kinds of
// flakiness and choosing if and who to email a copy of the flakiness report.
message HealthAnalysisOptions {
  // Defaults to false; flakiness analysis is opt-in
  bool enable = 1;

  // Defines the number of days for one interval of analysis.
  // i.e. flakiness will be analyzed for the previous N days starting from Now,
  // and it will be compared to the calculated N days before that for trend analysis.
  int32 days_of_analysis = 2;

  // When to send healthiness emails out, uses cron string format.
  string email_schedule = 3;

  // A comma-separated list of healthiness email recipients.
  string email_recipients = 4;

  // A compilable regex string for grouping tests by name.
  // Works the same as the group-by-regex-mask option of base_options:
  // go/testgrid/users/dashboard_guide#grouping-tests
  // An empty string means no grouping.
  // e.g. test name: "//path/to/test - env", regex: ` - \w+`
  // The regex will match " - env" in the above test name and give a group of:
  // //path/to/test  <- Group Name
  //     - env       <- Group Member
  string grouping_regex = 5;
}

// The DefaultConfiguration Proto is deprecated, and will be deleted after Nov 1, 2019
// For defaulting behavior, use the yamlcfg library instead.
message DefaultConfiguration {
  // A default testgroup with default initialization data
  TestGroup default_test_group = 1 [deprecated=true];

  // A default dashboard tab with default initialization data
  DashboardTab default_dashboard_tab = 2 [deprecated=true];
}
