{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/APIClient.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "APIClientImpl",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "String"
              },
              "default": "'testgrid-data.k8s.io'"
            },
            {
              "kind": "method",
              "name": "getDashboards",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Array<String>"
                }
              }
            },
            {
              "kind": "method",
              "name": "getDashboardGroups",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Array<String>"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "APIClientImpl",
          "declaration": {
            "name": "APIClientImpl",
            "module": "src/APIClient.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/testgrid-app.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Class definition for the `testgrid-app` element.\nApplication root element.",
          "name": "TestgridApp",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-app",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridApp",
          "declaration": {
            "name": "TestgridApp",
            "module": "src/testgrid-app.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-app",
          "declaration": {
            "name": "TestgridApp",
            "module": "src/testgrid-app.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/testgrid-index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Class definition for the `testgrid-index` element.\nRenders the list of dashboards and dashboard groups available.",
          "name": "TestgridIndex",
          "members": [
            {
              "kind": "field",
              "name": "dashboards",
              "type": {
                "text": "Array<string>"
              },
              "default": "[]",
              "attribute": "dashboards"
            },
            {
              "kind": "field",
              "name": "dashboardGroups",
              "type": {
                "text": "Array<string>"
              },
              "default": "[]",
              "attribute": "dashboardGroups"
            },
            {
              "kind": "method",
              "name": "fetchDashboards"
            },
            {
              "kind": "method",
              "name": "fetchDashboardGroups"
            }
          ],
          "attributes": [
            {
              "name": "dashboards",
              "type": {
                "text": "Array<string>"
              },
              "default": "[]",
              "fieldName": "dashboards"
            },
            {
              "name": "dashboardGroups",
              "type": {
                "text": "Array<string>"
              },
              "default": "[]",
              "fieldName": "dashboardGroups"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-index",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridIndex",
          "declaration": {
            "name": "TestgridIndex",
            "module": "src/testgrid-index.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-index",
          "declaration": {
            "name": "TestgridIndex",
            "module": "src/testgrid-index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/testgrid-grid-cell.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "NoResult"
        },
        {
          "kind": "variable",
          "name": "Pass"
        },
        {
          "kind": "variable",
          "name": "PassWithErrors"
        },
        {
          "kind": "variable",
          "name": "PassWithSkips"
        },
        {
          "kind": "variable",
          "name": "Running"
        },
        {
          "kind": "variable",
          "name": "CategorizedAbort"
        },
        {
          "kind": "variable",
          "name": "Unknown"
        },
        {
          "kind": "variable",
          "name": "Cancel"
        },
        {
          "kind": "variable",
          "name": "Blocked"
        },
        {
          "kind": "variable",
          "name": "TimedOut"
        },
        {
          "kind": "variable",
          "name": "CategorizedFail"
        },
        {
          "kind": "variable",
          "name": "BuildFail"
        },
        {
          "kind": "variable",
          "name": "Fail"
        },
        {
          "kind": "variable",
          "name": "Flaky"
        },
        {
          "kind": "variable",
          "name": "ToolFail"
        },
        {
          "kind": "variable",
          "name": "BuildPassed"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "NoResult",
          "declaration": {
            "name": "NoResult",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Pass",
          "declaration": {
            "name": "Pass",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "PassWithErrors",
          "declaration": {
            "name": "PassWithErrors",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "PassWithSkips",
          "declaration": {
            "name": "PassWithSkips",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Running",
          "declaration": {
            "name": "Running",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "CategorizedAbort",
          "declaration": {
            "name": "CategorizedAbort",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Unknown",
          "declaration": {
            "name": "Unknown",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Cancel",
          "declaration": {
            "name": "Cancel",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Blocked",
          "declaration": {
            "name": "Blocked",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "TimedOut",
          "declaration": {
            "name": "TimedOut",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "CategorizedFail",
          "declaration": {
            "name": "CategorizedFail",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "BuildFail",
          "declaration": {
            "name": "BuildFail",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Fail",
          "declaration": {
            "name": "Fail",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Flaky",
          "declaration": {
            "name": "Flaky",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ToolFail",
          "declaration": {
            "name": "ToolFail",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "BuildPassed",
          "declaration": {
            "name": "BuildPassed",
            "module": "stories/testgrid-grid-cell.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/testgrid-grid-column-header.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Empty"
        },
        {
          "kind": "variable",
          "name": "Short"
        },
        {
          "kind": "variable",
          "name": "Long"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "stories/testgrid-grid-column-header.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Empty",
          "declaration": {
            "name": "Empty",
            "module": "stories/testgrid-grid-column-header.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Short",
          "declaration": {
            "name": "Short",
            "module": "stories/testgrid-grid-column-header.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Long",
          "declaration": {
            "name": "Long",
            "module": "stories/testgrid-grid-column-header.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/testgrid-grid-row-name.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Empty"
        },
        {
          "kind": "variable",
          "name": "Short"
        },
        {
          "kind": "variable",
          "name": "Long"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "stories/testgrid-grid-row-name.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Empty",
          "declaration": {
            "name": "Empty",
            "module": "stories/testgrid-grid-row-name.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Short",
          "declaration": {
            "name": "Short",
            "module": "stories/testgrid-grid-row-name.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Long",
          "declaration": {
            "name": "Long",
            "module": "stories/testgrid-grid-row-name.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/testgrid-grid.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Grid"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "stories/testgrid-grid.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Grid",
          "declaration": {
            "name": "Grid",
            "module": "stories/testgrid-grid.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/testgrid-group-summary.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "DashboardGroup"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "stories/testgrid-group-summary.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "DashboardGroup",
          "declaration": {
            "name": "DashboardGroup",
            "module": "stories/testgrid-group-summary.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/testgrid-index.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "App"
        },
        {
          "kind": "function",
          "name": "Dashboards",
          "parameters": [
            {
              "name": "{\n  backgroundColor = 'white',\n}",
              "type": {
                "text": "ArgTypes"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "DashboardGroups",
          "parameters": [
            {
              "name": "{\n  backgroundColor = 'white',\n}",
              "type": {
                "text": "ArgTypes"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "stories/testgrid-index.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "App",
          "declaration": {
            "name": "App",
            "module": "stories/testgrid-index.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Dashboards",
          "declaration": {
            "name": "Dashboards",
            "module": "stories/testgrid-index.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "DashboardGroups",
          "declaration": {
            "name": "DashboardGroups",
            "module": "stories/testgrid-index.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/testgrid-tab-summary.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Passing"
        },
        {
          "kind": "variable",
          "name": "Flaky"
        },
        {
          "kind": "variable",
          "name": "Failing"
        },
        {
          "kind": "variable",
          "name": "Stale"
        },
        {
          "kind": "variable",
          "name": "Broken"
        },
        {
          "kind": "variable",
          "name": "Pending"
        },
        {
          "kind": "variable",
          "name": "Acceptable"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "stories/testgrid-tab-summary.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Passing",
          "declaration": {
            "name": "Passing",
            "module": "stories/testgrid-tab-summary.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Flaky",
          "declaration": {
            "name": "Flaky",
            "module": "stories/testgrid-tab-summary.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Failing",
          "declaration": {
            "name": "Failing",
            "module": "stories/testgrid-tab-summary.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Stale",
          "declaration": {
            "name": "Stale",
            "module": "stories/testgrid-tab-summary.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Broken",
          "declaration": {
            "name": "Broken",
            "module": "stories/testgrid-tab-summary.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Pending",
          "declaration": {
            "name": "Pending",
            "module": "stories/testgrid-tab-summary.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Acceptable",
          "declaration": {
            "name": "Acceptable",
            "module": "stories/testgrid-tab-summary.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/0c811e6a.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/16180165.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/1d1f8f99.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/4b568637.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/530d819e.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/58d4886d.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/5afc66be.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/6b1a4776.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/7edd2e3f.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/86f541c3.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/a948c7df.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/c2c1b651.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/c82602a5.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{}"
        },
        {
          "kind": "variable",
          "name": "t"
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "e"
            },
            {
              "name": "n"
            },
            {
              "name": "u"
            },
            {
              "name": "l"
            },
            {
              "name": "p"
            }
          ]
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "r"
            },
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "e"
            },
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "e"
            },
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "e"
            },
            {
              "name": "t"
            },
            {
              "name": "r"
            },
            {
              "name": "n"
            },
            {
              "name": "a"
            },
            {
              "name": "o"
            }
          ]
        },
        {
          "kind": "function",
          "name": "t"
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "r"
            },
            {
              "name": "n"
            },
            {
              "name": "a"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "r"
            },
            {
              "name": "n"
            },
            {
              "name": "a"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "r"
            },
            {
              "name": "n"
            },
            {
              "name": "a"
            },
            {
              "name": "o"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "r"
            },
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "r"
            },
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "r"
            },
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "t"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "e",
          "declaration": {
            "name": "t",
            "module": "storybook-static/c82602a5.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "e",
          "declaration": {
            "name": "t",
            "module": "storybook-static/c82602a5.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/e8facca6.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "coverage/lcov-report/block-navigation.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "coverage/lcov-report/prettify.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "coverage/lcov-report/sorter.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/APIClient.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "APIClientImpl",
          "members": [
            {
              "kind": "method",
              "name": "getDashboards"
            },
            {
              "kind": "method",
              "name": "getDashboardGroups"
            },
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "string"
              },
              "default": "'testgrid-data.k8s.io'"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "APIClientImpl",
          "declaration": {
            "name": "APIClientImpl",
            "module": "out-tsc/src/APIClient.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/testgrid-app.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridApp",
          "default": "class TestgridApp extends LitElement {\n    /**\n     * Lit-element lifecycle method.\n     * Invoked on each update to perform rendering tasks.\n     */\n    render() {\n        return html `<testgrid-root-router></testgrid-root-router>`;\n    }\n}",
          "description": "Class definition for the `testgrid-app` element.\nApplication root element."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridApp",
          "declaration": {
            "name": "TestgridApp",
            "module": "out-tsc/src/testgrid-app.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/testgrid-index.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridIndex",
          "default": "class TestgridIndex extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.dashboards = [];\n        this.dashboardGroups = [];\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked when a component is added to the document's DOM.\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        this.fetchDashboardGroups();\n        this.fetchDashboards();\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked on each update to perform rendering tasks.\n     */\n    render() {\n        return html `\n      <div class=\"flex-container\">\n        <!-- loading dashboard groups -->\n        <mwc-list style=\"min-width: 760px\">\n          ${map(this.dashboardGroups, (group, index) => html `\n              <mwc-list-item\n                id=${index}\n                class=\"column card dashboard-group\"\n                raised\n                @click=\"${() => navigateGroup(group, true)}\"\n              >\n                <div class=\"container\">\n                  <p>${group}</p>\n                </div>\n              </mwc-list-item>\n            `)}\n        </mwc-list>\n\n        <!-- loading dashboards -->\n        ${dashboardTemplate(this.dashboards)}\n\n      </div>\n    `;\n    }\n    // fetch the the list of dashboards from the API\n    async fetchDashboards() {\n        try {\n            fetch(`http://${process.env.API_HOST}:${process.env.API_PORT}/api/v1/dashboards`).then(async (response) => {\n                const resp = ListDashboardsResponse.fromJson(await response.json());\n                const dashboards = [];\n                resp.dashboards.forEach(db => {\n                    if (db.dashboardGroupName === \"\") {\n                        dashboards.push(db.name);\n                    }\n                });\n                this.dashboards = dashboards;\n            });\n        }\n        catch (error) {\n            console.log(`failed to fetch: ${error}`);\n        }\n    }\n    // fetch the list of dashboard groups from API\n    async fetchDashboardGroups() {\n        try {\n            fetch(`http://${process.env.API_HOST}:${process.env.API_PORT}/api/v1/dashboard-groups`).then(async (response) => {\n                const resp = ListDashboardGroupsResponse.fromJson(await response.json());\n                const dashboardGroups = [];\n                resp.dashboardGroups.forEach(db => {\n                    dashboardGroups.push(db.name);\n                });\n                this.dashboardGroups = dashboardGroups;\n            });\n        }\n        catch (error) {\n            console.log(`failed to fetch: ${error}`);\n        }\n    }\n}",
          "description": "Class definition for the `testgrid-index` element.\nRenders the list of dashboards and dashboard groups available."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridIndex",
          "declaration": {
            "name": "TestgridIndex",
            "module": "out-tsc/src/testgrid-index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/stories/testgrid-grid-cell.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "NoResult"
        },
        {
          "kind": "variable",
          "name": "Pass"
        },
        {
          "kind": "variable",
          "name": "PassWithErrors"
        },
        {
          "kind": "variable",
          "name": "PassWithSkips"
        },
        {
          "kind": "variable",
          "name": "Running"
        },
        {
          "kind": "variable",
          "name": "CategorizedAbort"
        },
        {
          "kind": "variable",
          "name": "Unknown"
        },
        {
          "kind": "variable",
          "name": "Cancel"
        },
        {
          "kind": "variable",
          "name": "Blocked"
        },
        {
          "kind": "variable",
          "name": "TimedOut"
        },
        {
          "kind": "variable",
          "name": "CategorizedFail"
        },
        {
          "kind": "variable",
          "name": "BuildFail"
        },
        {
          "kind": "variable",
          "name": "Fail"
        },
        {
          "kind": "variable",
          "name": "Flaky"
        },
        {
          "kind": "variable",
          "name": "ToolFail"
        },
        {
          "kind": "variable",
          "name": "BuildPassed"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "NoResult",
          "declaration": {
            "name": "NoResult",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Pass",
          "declaration": {
            "name": "Pass",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "PassWithErrors",
          "declaration": {
            "name": "PassWithErrors",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "PassWithSkips",
          "declaration": {
            "name": "PassWithSkips",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Running",
          "declaration": {
            "name": "Running",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "CategorizedAbort",
          "declaration": {
            "name": "CategorizedAbort",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Unknown",
          "declaration": {
            "name": "Unknown",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Cancel",
          "declaration": {
            "name": "Cancel",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Blocked",
          "declaration": {
            "name": "Blocked",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "TimedOut",
          "declaration": {
            "name": "TimedOut",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "CategorizedFail",
          "declaration": {
            "name": "CategorizedFail",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "BuildFail",
          "declaration": {
            "name": "BuildFail",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Fail",
          "declaration": {
            "name": "Fail",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Flaky",
          "declaration": {
            "name": "Flaky",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "ToolFail",
          "declaration": {
            "name": "ToolFail",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "BuildPassed",
          "declaration": {
            "name": "BuildPassed",
            "module": "out-tsc/stories/testgrid-grid-cell.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/stories/testgrid-grid-column-header.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Empty"
        },
        {
          "kind": "variable",
          "name": "Short"
        },
        {
          "kind": "variable",
          "name": "Long"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "out-tsc/stories/testgrid-grid-column-header.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Empty",
          "declaration": {
            "name": "Empty",
            "module": "out-tsc/stories/testgrid-grid-column-header.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Short",
          "declaration": {
            "name": "Short",
            "module": "out-tsc/stories/testgrid-grid-column-header.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Long",
          "declaration": {
            "name": "Long",
            "module": "out-tsc/stories/testgrid-grid-column-header.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/stories/testgrid-grid-row-name.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Empty"
        },
        {
          "kind": "variable",
          "name": "Short"
        },
        {
          "kind": "variable",
          "name": "Long"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "out-tsc/stories/testgrid-grid-row-name.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Empty",
          "declaration": {
            "name": "Empty",
            "module": "out-tsc/stories/testgrid-grid-row-name.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Short",
          "declaration": {
            "name": "Short",
            "module": "out-tsc/stories/testgrid-grid-row-name.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Long",
          "declaration": {
            "name": "Long",
            "module": "out-tsc/stories/testgrid-grid-row-name.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/stories/testgrid-grid.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Grid"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "out-tsc/stories/testgrid-grid.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Grid",
          "declaration": {
            "name": "Grid",
            "module": "out-tsc/stories/testgrid-grid.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/stories/testgrid-group-summary.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "DashboardGroup"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "out-tsc/stories/testgrid-group-summary.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardGroup",
          "declaration": {
            "name": "DashboardGroup",
            "module": "out-tsc/stories/testgrid-group-summary.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/stories/testgrid-index.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "App"
        },
        {
          "kind": "function",
          "name": "Dashboards",
          "parameters": [
            {
              "name": "{ backgroundColor = 'white', }"
            }
          ]
        },
        {
          "kind": "function",
          "name": "DashboardGroups",
          "parameters": [
            {
              "name": "{ backgroundColor = 'white', }"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "out-tsc/stories/testgrid-index.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "App",
          "declaration": {
            "name": "App",
            "module": "out-tsc/stories/testgrid-index.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Dashboards",
          "declaration": {
            "name": "Dashboards",
            "module": "out-tsc/stories/testgrid-index.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardGroups",
          "declaration": {
            "name": "DashboardGroups",
            "module": "out-tsc/stories/testgrid-index.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/stories/testgrid-tab-summary.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Passing"
        },
        {
          "kind": "variable",
          "name": "Flaky"
        },
        {
          "kind": "variable",
          "name": "Failing"
        },
        {
          "kind": "variable",
          "name": "Stale"
        },
        {
          "kind": "variable",
          "name": "Broken"
        },
        {
          "kind": "variable",
          "name": "Pending"
        },
        {
          "kind": "variable",
          "name": "Acceptable"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "out-tsc/stories/testgrid-tab-summary.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Passing",
          "declaration": {
            "name": "Passing",
            "module": "out-tsc/stories/testgrid-tab-summary.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Flaky",
          "declaration": {
            "name": "Flaky",
            "module": "out-tsc/stories/testgrid-tab-summary.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Failing",
          "declaration": {
            "name": "Failing",
            "module": "out-tsc/stories/testgrid-tab-summary.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Stale",
          "declaration": {
            "name": "Stale",
            "module": "out-tsc/stories/testgrid-tab-summary.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Broken",
          "declaration": {
            "name": "Broken",
            "module": "out-tsc/stories/testgrid-tab-summary.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Pending",
          "declaration": {
            "name": "Pending",
            "module": "out-tsc/stories/testgrid-tab-summary.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Acceptable",
          "declaration": {
            "name": "Acceptable",
            "module": "out-tsc/stories/testgrid-tab-summary.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/dashboard/testgrid-dashboard-content.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Class definition for the `testgrid-data-content` element.\nActs as a container for dashboard summary or grid data.\nRenders the tab bar with tab names irrespective of the view.",
          "name": "TestgridDashboardContent",
          "members": [
            {
              "kind": "field",
              "name": "tabNames",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "activeIndex",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "groupName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "groupName"
            },
            {
              "kind": "field",
              "name": "dashboardName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "dashboardName"
            },
            {
              "kind": "field",
              "name": "tabName",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "tabName"
            },
            {
              "kind": "method",
              "name": "onTabActivated",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<{index: number}>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fetchTabNames",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "highlightIndex",
              "privacy": "private",
              "parameters": [
                {
                  "name": "tabName",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "groupName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "groupName"
            },
            {
              "name": "dashboardName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "dashboardName"
            },
            {
              "name": "tabName",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "tabName"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-dashboard-content",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridDashboardContent",
          "declaration": {
            "name": "TestgridDashboardContent",
            "module": "src/dashboard/testgrid-dashboard-content.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-dashboard-content",
          "declaration": {
            "name": "TestgridDashboardContent",
            "module": "src/dashboard/testgrid-dashboard-content.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/dashboard/testgrid-dashboard-summary.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "TabStatusIcon",
          "default": "new Map<string, string>([\n  ['PASSING', 'done'],\n  ['FAILING', 'warning'],\n  ['FLAKY', 'remove_circle_outline'],\n  ['STALE', 'error_outline'],\n  ['BROKEN', 'broken_image'],\n  ['PENDING', 'schedule'],\n  ['ACCEPTABLE', 'add_circle_outline'],\n])"
        },
        {
          "kind": "class",
          "description": "Class definition for the `testgrid-dashboard-summary` element.\nRenders the dashboard summary (summary of dashboard tabs).",
          "name": "TestgridDashboardSummary",
          "members": [
            {
              "kind": "field",
              "name": "dashboardName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "dashboardName"
            },
            {
              "kind": "field",
              "name": "tabSummariesInfo",
              "type": {
                "text": "Array<TabSummaryInfo>"
              },
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "fetchTabSummaries",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "dashboardName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "dashboardName"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-dashboard-summary",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabStatusIcon",
          "declaration": {
            "name": "TabStatusIcon",
            "module": "src/dashboard/testgrid-dashboard-summary.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestgridDashboardSummary",
          "declaration": {
            "name": "TestgridDashboardSummary",
            "module": "src/dashboard/testgrid-dashboard-summary.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-dashboard-summary",
          "declaration": {
            "name": "TestgridDashboardSummary",
            "module": "src/dashboard/testgrid-dashboard-summary.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/dashboard/testgrid-failures-summary.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestgridFailuresSummary",
          "members": [
            {
              "kind": "field",
              "name": "showFailureSummary",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "info",
              "type": {
                "text": "TabSummaryInfo | undefined"
              },
              "attribute": "info"
            },
            {
              "kind": "method",
              "name": "dropdownTable",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "info",
              "type": {
                "text": "TabSummaryInfo | undefined"
              },
              "fieldName": "info"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-failures-summary",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridFailuresSummary",
          "declaration": {
            "name": "TestgridFailuresSummary",
            "module": "src/dashboard/testgrid-failures-summary.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-failures-summary",
          "declaration": {
            "name": "TestgridFailuresSummary",
            "module": "src/dashboard/testgrid-failures-summary.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/dashboard/testgrid-tab-summary.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TabSummary",
          "members": [
            {
              "kind": "field",
              "name": "info",
              "type": {
                "text": "TabSummaryInfo | undefined"
              },
              "attribute": "info"
            },
            {
              "kind": "method",
              "name": "changeTab",
              "privacy": "private",
              "description": "Lets the data content element know that the tab changed",
              "parameters": [
                {
                  "description": "string",
                  "name": "tabName"
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "info",
              "type": {
                "text": "TabSummaryInfo | undefined"
              },
              "fieldName": "info"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "tab-summary",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabSummary",
          "declaration": {
            "name": "TabSummary",
            "module": "src/dashboard/testgrid-tab-summary.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "tab-summary",
          "declaration": {
            "name": "TabSummary",
            "module": "src/dashboard/testgrid-tab-summary.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/grid/testgrid-grid-cell.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestgridGridCell",
          "members": [
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "String"
              },
              "attribute": "status",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "String"
              },
              "attribute": "icon"
            }
          ],
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "String"
              },
              "fieldName": "status"
            },
            {
              "name": "icon",
              "type": {
                "text": "String"
              },
              "fieldName": "icon"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-grid-cell",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGridCell",
          "declaration": {
            "name": "TestgridGridCell",
            "module": "src/grid/testgrid-grid-cell.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-grid-cell",
          "declaration": {
            "name": "TestgridGridCell",
            "module": "src/grid/testgrid-grid-cell.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/grid/testgrid-grid-column-header.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestgridGridColumnHeader",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "String"
              },
              "attribute": "name"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "String"
              },
              "fieldName": "name"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-grid-column-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGridColumnHeader",
          "declaration": {
            "name": "TestgridGridColumnHeader",
            "module": "src/grid/testgrid-grid-column-header.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-grid-column-header",
          "declaration": {
            "name": "TestgridGridColumnHeader",
            "module": "src/grid/testgrid-grid-column-header.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/grid/testgrid-grid-header-row.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestgridGridHeaderRow",
          "members": [
            {
              "kind": "field",
              "name": "headers",
              "type": {
                "text": "ListHeadersResponse"
              },
              "attribute": "headers"
            }
          ],
          "attributes": [
            {
              "name": "headers",
              "type": {
                "text": "ListHeadersResponse"
              },
              "fieldName": "headers"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-grid-header-row",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGridHeaderRow",
          "declaration": {
            "name": "TestgridGridHeaderRow",
            "module": "src/grid/testgrid-grid-header-row.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-grid-header-row",
          "declaration": {
            "name": "TestgridGridHeaderRow",
            "module": "src/grid/testgrid-grid-header-row.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/grid/testgrid-grid-row-name.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestgridGridRowName",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "String"
              },
              "attribute": "name"
            }
          ],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "String"
              },
              "fieldName": "name"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-grid-row-name",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGridRowName",
          "declaration": {
            "name": "TestgridGridRowName",
            "module": "src/grid/testgrid-grid-row-name.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-grid-row-name",
          "declaration": {
            "name": "TestgridGridRowName",
            "module": "src/grid/testgrid-grid-row-name.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/grid/testgrid-grid-row.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestgridGridRow",
          "members": [
            {
              "kind": "field",
              "name": "rowData",
              "type": {
                "text": "ListRowsResponse_Row"
              },
              "attribute": "rowData"
            }
          ],
          "attributes": [
            {
              "name": "rowData",
              "type": {
                "text": "ListRowsResponse_Row"
              },
              "fieldName": "rowData"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-grid-row",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGridRow",
          "declaration": {
            "name": "TestgridGridRow",
            "module": "src/grid/testgrid-grid-row.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-grid-row",
          "declaration": {
            "name": "TestgridGridRow",
            "module": "src/grid/testgrid-grid-row.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/grid/testgrid-grid.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Class definition for `testgrid-grid` component.\nRenders the test results grid.",
          "name": "TestgridGrid",
          "members": [
            {
              "kind": "field",
              "name": "dashboardName",
              "type": {
                "text": "String"
              },
              "default": "''",
              "attribute": "dashboardName",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "tabName",
              "type": {
                "text": "String"
              },
              "default": "''",
              "attribute": "tabName",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "tabGridRows",
              "type": {
                "text": "Array<ListRowsResponse_Row>"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "tabGridHeaders",
              "type": {
                "text": "ListHeadersResponse"
              }
            },
            {
              "kind": "method",
              "name": "fetchTabGrid",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "fetchTabGridRows",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "fetchTabGridHeaders",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "dashboardName",
              "type": {
                "text": "String"
              },
              "default": "''",
              "fieldName": "dashboardName"
            },
            {
              "name": "tabName",
              "type": {
                "text": "String"
              },
              "default": "''",
              "fieldName": "tabName"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-grid",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGrid",
          "declaration": {
            "name": "TestgridGrid",
            "module": "src/grid/testgrid-grid.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-grid",
          "declaration": {
            "name": "TestgridGrid",
            "module": "src/grid/testgrid-grid.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/group/testgrid-group-content.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Class definition for the `testgrid-group-content` element.\nActs as a container which can toggle between group summary view or dashboard-content element.\nRenders the tab bar with dashboard names irrespective of the view.",
          "name": "TestgridGroupContent",
          "members": [
            {
              "kind": "field",
              "name": "dashboardNames",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "activeIndex",
              "type": {
                "text": "number"
              },
              "default": "0"
            },
            {
              "kind": "field",
              "name": "groupName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "groupName"
            },
            {
              "kind": "field",
              "name": "dashboardName",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "dashboardName"
            },
            {
              "kind": "field",
              "name": "tabName",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "tabName"
            },
            {
              "kind": "method",
              "name": "onDashboardActivated",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<{index: number}>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fetchDashboardNames",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "highlightIndex",
              "privacy": "private",
              "parameters": [
                {
                  "name": "dashboardName",
                  "type": {
                    "text": "string | undefined"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "groupName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "groupName"
            },
            {
              "name": "dashboardName",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "dashboardName"
            },
            {
              "name": "tabName",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "tabName"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-group-content",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGroupContent",
          "declaration": {
            "name": "TestgridGroupContent",
            "module": "src/group/testgrid-group-content.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-group-content",
          "declaration": {
            "name": "TestgridGroupContent",
            "module": "src/group/testgrid-group-content.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/group/testgrid-group-summary.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestgridGroupSummary",
          "members": [
            {
              "kind": "field",
              "name": "groupName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "groupName"
            },
            {
              "kind": "field",
              "name": "dashboardSummaries",
              "type": {
                "text": "RenderedDashboardSummary[]"
              },
              "default": "[]"
            },
            {
              "kind": "method",
              "name": "fetchDashboardSummaries",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "convertResponse",
              "privacy": "private",
              "parameters": [
                {
                  "name": "summary",
                  "type": {
                    "text": "DashboardSummary"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "groupName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "groupName"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-group-summary",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGroupSummary",
          "declaration": {
            "name": "TestgridGroupSummary",
            "module": "src/group/testgrid-group-summary.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-group-summary",
          "declaration": {
            "name": "TestgridGroupSummary",
            "module": "src/group/testgrid-group-summary.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/navigation/testgrid-dashboard-router.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Class definition for the `testgrid-dashboard-router` element.\nHandles the dashboard level routing logic.\nRenders the dashboard summary view within group-content element or continues\nwith the next level router.",
          "name": "TestgridDashboardRouter",
          "members": [
            {
              "kind": "field",
              "name": "groupName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "groupName"
            },
            {
              "kind": "field",
              "name": "routes",
              "privacy": "private",
              "default": "new Routes(this, [\n    {\n      path: 'dashboards/:dashboard', \n      render: (params: RouteParameter) => html`<testgrid-group-content .groupName=${this.groupName} .dashboardName=${params.dashboard}></testgrid-group-content>`,\n    },\n    {\n      path: 'dashboards/:dashboard/*', \n      render: (params: RouteParameter) => html`<testgrid-tab-router .groupName=${this.groupName} .dashboardName=${params.dashboard}></testgrid-tab-router>`,\n    },\n  ])"
            }
          ],
          "attributes": [
            {
              "name": "groupName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "groupName"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-dashboard-router",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridDashboardRouter",
          "declaration": {
            "name": "TestgridDashboardRouter",
            "module": "src/navigation/testgrid-dashboard-router.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-dashboard-router",
          "declaration": {
            "name": "TestgridDashboardRouter",
            "module": "src/navigation/testgrid-dashboard-router.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/navigation/testgrid-root-router.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Class definition for the `testgrid-root-router` element.\nHandles the top-level routing logic.\nRenders the index page, main container component or passes down the data to dashboard level router.",
          "name": "TestgridRootRouter",
          "members": [
            {
              "kind": "field",
              "name": "router",
              "privacy": "private",
              "default": "new Router(this, [\n    {\n      path: '/groups/:group/*', \n      render: (params: RouteParameter) => html`<testgrid-dashboard-router .groupName=${params.group}></testgrid-dashboard-router>`,\n    },\n    {\n      path: '/groups/:group', \n      render: (params: RouteParameter) => html`<testgrid-group-content .groupName=${params.group}></testgrid-group-content>`,\n    },\n    {\n      path: '/',\n      render: () => html`<testgrid-index></testgrid-index>`,\n    },\n  ])"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-root-router",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridRootRouter",
          "declaration": {
            "name": "TestgridRootRouter",
            "module": "src/navigation/testgrid-root-router.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-root-router",
          "declaration": {
            "name": "TestgridRootRouter",
            "module": "src/navigation/testgrid-root-router.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/navigation/testgrid-tab-router.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Class definition for the `testgrid-tab-router` element.\nHandles the tab level routing logic.\nRenders the grid view within dashboard-content within group-content",
          "name": "TestgridTabRouter",
          "members": [
            {
              "kind": "field",
              "name": "groupName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "groupName"
            },
            {
              "kind": "field",
              "name": "dashboardName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "attribute": "dashboardName"
            },
            {
              "kind": "field",
              "name": "routes",
              "privacy": "private",
              "default": "new Routes(this, [\n    {\n      path: 'tabs/:tab', \n      render: (params: RouteParameter) => html`<testgrid-group-content .groupName=${this.groupName} .dashboardName=${this.dashboardName} .tabName=${params.tab}></testgrid-group-content>`,\n    },\n  ])"
            }
          ],
          "attributes": [
            {
              "name": "groupName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "groupName"
            },
            {
              "name": "dashboardName",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "dashboardName"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "testgrid-tab-router",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridTabRouter",
          "declaration": {
            "name": "TestgridTabRouter",
            "module": "src/navigation/testgrid-tab-router.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "testgrid-tab-router",
          "declaration": {
            "name": "TestgridTabRouter",
            "module": "src/navigation/testgrid-tab-router.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utils/navigation.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "navigate",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "path",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Navigates application to a specified page."
        },
        {
          "kind": "function",
          "name": "navigateTabWithoutReload",
          "parameters": [
            {
              "name": "group",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "dashboard",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "tab",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Changes the URL without reloading"
        },
        {
          "kind": "function",
          "name": "navigateDashboardWithoutReload",
          "parameters": [
            {
              "name": "group",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "dashboard",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Navigates to the dashboard URL without reload"
        },
        {
          "kind": "function",
          "name": "navigateGroup",
          "parameters": [
            {
              "name": "group",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "reload",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "description": "Navigates to the group URL"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "navigate",
          "declaration": {
            "name": "navigate",
            "module": "src/utils/navigation.ts"
          }
        },
        {
          "kind": "js",
          "name": "navigateTabWithoutReload",
          "declaration": {
            "name": "navigateTabWithoutReload",
            "module": "src/utils/navigation.ts"
          }
        },
        {
          "kind": "js",
          "name": "navigateDashboardWithoutReload",
          "declaration": {
            "name": "navigateDashboardWithoutReload",
            "module": "src/utils/navigation.ts"
          }
        },
        {
          "kind": "js",
          "name": "navigateGroup",
          "declaration": {
            "name": "navigateGroup",
            "module": "src/utils/navigation.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/polyfills/core-js.28055faac7332b21c9e06460dae4b000.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/polyfills/custom-elements-es5-adapter.79106fd9b808b3bbd70d54b934850301.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/polyfills/fetch.f8c330d549b0d591bce5f245fe3351f9.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/polyfills/intersection-observer.1dfab822bea56de541280683e0923ef2.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/polyfills/regenerator-runtime.e2c951e2eae648aacbcac529428355da.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/polyfills/resize-observer.467474095074c8a92dde0e006c40eb12.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/polyfills/systemjs.dabf4e8006a3be11acd4b6981abd9943.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/polyfills/webcomponents.a551e00e9f31a5519876700c4ae6d987.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/dashboard/testgrid-dashboard-content.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridDashboardContent",
          "default": "class TestgridDashboardContent extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.tabNames = [];\n        this.activeIndex = 0;\n        this.groupName = '';\n        this.dashboardName = '';\n    }\n    // set the functionality when any tab is clicked on\n    onTabActivated(event) {\n        const tabIndex = event.detail.index;\n        if (tabIndex === this.activeIndex) {\n            return;\n        }\n        // change from dashboard view to grid view or between grid views\n        if ((this.activeIndex === 0) || (this.activeIndex !== 0 && tabIndex !== 0)) {\n            this.tabName = this.tabNames[tabIndex];\n            navigateTabWithoutReload(this.groupName, this.dashboardName, this.tabName);\n        }\n        // change from dashboard view to group view\n        else {\n            this.tabName = undefined;\n            navigateDashboardWithoutReload(this.groupName, this.dashboardName);\n        }\n        this.activeIndex = tabIndex;\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked when a component is added to the document's DOM.\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        window.addEventListener('tab-changed', (evt) => {\n            this.tabName = evt.detail.tabName;\n            this.highlightIndex(this.tabName);\n            navigateTabWithoutReload(this.groupName, this.dashboardName, this.tabName);\n        });\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked when element properties are changed.\n     */\n    willUpdate(changedProperties) {\n        if (changedProperties.has('dashboardName') && changedProperties.has('tabName')) {\n            this.fetchTabNames();\n        }\n        else if (changedProperties.has('dashboardName')) {\n            this.tabName = undefined;\n            this.fetchTabNames();\n        }\n        else if (changedProperties.has('tabName')) {\n            this.highlightIndex(this.tabName);\n        }\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked on each update to perform rendering tasks.\n     */\n    render() {\n        var tabBar = html `${\n        // make sure we only render the tabs when there are tabs\n        when(this.tabNames.length > 0, () => html `\n        <mwc-tab-bar .activeIndex=${this.activeIndex} @MDCTabBar:activated=\"${this.onTabActivated}\">\n          ${map(this.tabNames, (name) => html `<mwc-tab label=${name}></mwc-tab>`)}\n        </mwc-tab-bar>`)}`;\n        return html `\n      ${tabBar}\n      ${!this.tabName ?\n            html `<testgrid-dashboard-summary .dashboardName=${this.dashboardName}></testgrid-dashboard-summary>` :\n            html `<testgrid-grid .dashboardName=${this.dashboardName} .tabName=${this.tabName}></testgrid-grid>`}\n    `;\n    }\n    // fetch the tab names to populate the tab bar\n    async fetchTabNames() {\n        try {\n            const response = await fetch(`http://${process.env.API_HOST}:${process.env.API_PORT}/api/v1/dashboards/${this.dashboardName}/tabs`);\n            if (!response.ok) {\n                throw new Error(`HTTP error: ${response.status}`);\n            }\n            const data = ListDashboardTabsResponse.fromJson(await response.json());\n            var tabNames = ['Summary'];\n            data.dashboardTabs.forEach(tab => {\n                tabNames.push(tab.name);\n            });\n            this.tabNames = tabNames;\n            this.highlightIndex(this.tabName);\n        }\n        catch (error) {\n            console.error(`Could not get dashboard summaries: ${error}`);\n        }\n    }\n    // identify which tab to highlight on the tab bar\n    highlightIndex(tabName) {\n        if (tabName === undefined) {\n            this.activeIndex = 0;\n            return;\n        }\n        var index = this.tabNames.indexOf(tabName);\n        if (index > -1) {\n            this.activeIndex = index;\n        }\n    }\n}",
          "description": "Class definition for the `testgrid-data-content` element.\nActs as a container for dashboard summary or grid data.\nRenders the tab bar with tab names irrespective of the view."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridDashboardContent",
          "declaration": {
            "name": "TestgridDashboardContent",
            "module": "out-tsc/src/dashboard/testgrid-dashboard-content.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/dashboard/testgrid-dashboard-summary.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TabStatusIcon",
          "default": "new Map([\n    ['PASSING', 'done'],\n    ['FAILING', 'warning'],\n    ['FLAKY', 'remove_circle_outline'],\n    ['STALE', 'error_outline'],\n    ['BROKEN', 'broken_image'],\n    ['PENDING', 'schedule'],\n    ['ACCEPTABLE', 'add_circle_outline'],\n])"
        },
        {
          "kind": "variable",
          "name": "TestgridDashboardSummary",
          "default": "class TestgridDashboardSummary extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.dashboardName = '';\n        this.tabSummariesInfo = [];\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked when element properties are changed.\n     */\n    willUpdate(changedProperties) {\n        if (changedProperties.has('dashboardName')) {\n            this.fetchTabSummaries();\n        }\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked on each update to perform rendering tasks.\n     */\n    render() {\n        return html `\n      ${map(this.tabSummariesInfo, (ts) => html `<tab-summary .info=${ts}></tab-summary>`)}\n  `;\n    }\n    // fetch the tab summaries and tab names to populate the tab bar\n    async fetchTabSummaries() {\n        try {\n            const response = await fetch(`http://${process.env.API_HOST}:${process.env.API_PORT}/api/v1/dashboards/${this.dashboardName}/tab-summaries`);\n            if (!response.ok) {\n                throw new Error(`HTTP error: ${response.status}`);\n            }\n            const data = ListTabSummariesResponse.fromJson(await response.json());\n            var tabSummaries = [];\n            data.tabSummaries.forEach(ts => {\n                const si = convertResponse(ts);\n                tabSummaries.push(si);\n            });\n            this.tabSummariesInfo = tabSummaries;\n        }\n        catch (error) {\n            console.error(`Could not get dashboard summaries: ${error}`);\n        }\n    }\n}",
          "description": "Class definition for the `testgrid-dashboard-summary` element.\nRenders the dashboard summary (summary of dashboard tabs)."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabStatusIcon",
          "declaration": {
            "name": "TabStatusIcon",
            "module": "out-tsc/src/dashboard/testgrid-dashboard-summary.js"
          }
        },
        {
          "kind": "js",
          "name": "TestgridDashboardSummary",
          "declaration": {
            "name": "TestgridDashboardSummary",
            "module": "out-tsc/src/dashboard/testgrid-dashboard-summary.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/dashboard/testgrid-failures-summary.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridFailuresSummary",
          "default": "class TestgridFailuresSummary extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.showFailureSummary = false;\n    }\n    render() {\n        var _a;\n        return html `\n    <div class=\"dropdown-container\">\n        <button @click=\"${() => this.dropdownTable()}\" class=\"btn\">\n          ${this.showFailureSummary ? html `- Hide Alerts -` : html `- Show Alerts -`}\n        </button>\n      ${this.showFailureSummary ? html `\n          <table class=\"dropdown-menu\">\n            <tr>\n              <th>Test Name</th>\n              <th># Fails</th>\n              <th>First Failed</th>\n              <th>Last Passed</th>\n            </tr>\n            ${map((_a = this.info) === null || _a === void 0 ? void 0 : _a.failuresSummary.topFailingTests, (test) => html `\n                <tr>\n                  <td>${test.displayName}</td>\n                  <td>${test.failCount}</td>\n                  <td>${test.passTimestamp}</td>\n                  <td>${test.failTimestamp}</td>\n                </tr>\n              `)}\n          </table>`\n            : ''}\n      </div>\n    `;\n    }\n    dropdownTable() {\n        this.showFailureSummary = !this.showFailureSummary;\n    }\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridFailuresSummary",
          "declaration": {
            "name": "TestgridFailuresSummary",
            "module": "out-tsc/src/dashboard/testgrid-failures-summary.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/dashboard/testgrid-tab-summary.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TabSummary",
          "default": "class TabSummary extends LitElement {\n    render() {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        return html `\n      <link\n        rel=\"stylesheet\"\n        href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      />\n      <div class=\"tab\">\n        <div class=\"left\">\n          <div class=\"icon-wrapper\">\n            <i class=\"material-icons ${(_a = this.info) === null || _a === void 0 ? void 0 : _a.overallStatus}\"\n              >${(_b = this.info) === null || _b === void 0 ? void 0 : _b.icon}</i\n            >\n          </div>\n        </div>\n        <div class=\"mid\">\n          <div @click=${() => this.changeTab()} class=\"tab-name\">\n            ${(_c = this.info) === null || _c === void 0 ? void 0 : _c.name}: ${(_d = this.info) === null || _d === void 0 ? void 0 : _d.overallStatus}\n          </div>\n          <div class=\"detailed-status\">${(_e = this.info) === null || _e === void 0 ? void 0 : _e.detailedStatusMsg}</div>\n        </div>\n        <div class=\"right\">\n          <div class=\"stats\">\n            Last update: ${(_f = this.info) === null || _f === void 0 ? void 0 : _f.lastUpdateTimestamp}\n          </div>\n          <div class=\"stats\">\n            Tests last ran: ${(_g = this.info) === null || _g === void 0 ? void 0 : _g.lastRunTimestamp}\n          </div>\n          <div class=\"stats\">\n            Last green run: ${(_h = this.info) === null || _h === void 0 ? void 0 : _h.latestGreenBuild}\n          </div>\n        </div>\n      </div>\n      ${((_j = this.info) === null || _j === void 0 ? void 0 : _j.failuresSummary) !== undefined ?\n            html `<testgrid-failures-summary .info=${this.info}>\n        </testgrid-failures-summary>` : ''}\n    `;\n    }\n    /**\n     * Lets the data content element know that the tab changed\n     *\n     * @fires tab-changed\n     * @param tabName string\n     */\n    changeTab() {\n        var _a;\n        window.dispatchEvent(new CustomEvent('tab-changed', {\n            detail: {\n                tabName: (_a = this.info) === null || _a === void 0 ? void 0 : _a.name\n            },\n        }));\n    }\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TabSummary",
          "declaration": {
            "name": "TabSummary",
            "module": "out-tsc/src/dashboard/testgrid-tab-summary.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/grid/testgrid-grid-cell.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridGridCell",
          "default": "class TestgridGridCell extends LitElement {\n    render() {\n        return html `${this.icon}`;\n    }\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGridCell",
          "declaration": {
            "name": "TestgridGridCell",
            "module": "out-tsc/src/grid/testgrid-grid-cell.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/grid/testgrid-grid-column-header.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridGridColumnHeader",
          "default": "class TestgridGridColumnHeader extends LitElement {\n    render() {\n        return html `${this.name}`;\n    }\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGridColumnHeader",
          "declaration": {
            "name": "TestgridGridColumnHeader",
            "module": "out-tsc/src/grid/testgrid-grid-column-header.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/grid/testgrid-grid-header-row.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridGridHeaderRow",
          "default": "class TestgridGridHeaderRow extends LitElement {\n    render() {\n        var _a;\n        // TODO(michelle192837): Replace row name component with more appropriate one.\n        return html `\n      <testgrid-grid-row-name></testgrid-grid-row-name>\n      ${map((_a = this.headers) === null || _a === void 0 ? void 0 : _a.headers, header => html `<testgrid-grid-column-header\n            .name=\"${header.build}\"\n          ></testgrid-grid-column-header>`)}\n    `;\n    }\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGridHeaderRow",
          "declaration": {
            "name": "TestgridGridHeaderRow",
            "module": "out-tsc/src/grid/testgrid-grid-header-row.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/grid/testgrid-grid-row-name.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridGridRowName",
          "default": "class TestgridGridRowName extends LitElement {\n    render() {\n        return html `${this.name}`;\n    }\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGridRowName",
          "declaration": {
            "name": "TestgridGridRowName",
            "module": "out-tsc/src/grid/testgrid-grid-row-name.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/grid/testgrid-grid-row.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridGridRow",
          "default": "class TestgridGridRow extends LitElement {\n    render() {\n        var _a, _b;\n        return html `<testgrid-grid-row-name .name=\"${(_a = this.rowData) === null || _a === void 0 ? void 0 : _a.name}\">\n      </testgrid-grid-row-name>\n      ${map((_b = this.rowData) === null || _b === void 0 ? void 0 : _b.cells, cell => html `<testgrid-grid-cell\n            .icon=\"${cell.icon}\"\n            .status=\"${TestStatus[cell.result]}\"\n          ></testgrid-grid-cell>`)} `;\n    }\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGridRow",
          "declaration": {
            "name": "TestgridGridRow",
            "module": "out-tsc/src/grid/testgrid-grid-row.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/grid/testgrid-grid.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridGrid",
          "default": "class TestgridGrid extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.dashboardName = '';\n        this.tabName = '';\n        this.tabGridRows = [];\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked when element properties are changed.\n     */\n    willUpdate(changedProperties) {\n        if (changedProperties.has('tabName')) {\n            this.fetchTabGrid();\n        }\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked on each update to perform rendering tasks.\n     */\n    render() {\n        return html `\n    <testgrid-grid-header-row .headers=\"${this.tabGridHeaders}\"></testgrid-grid-header-row>\n    ${map(this.tabGridRows, (row) => html `<testgrid-grid-row .name=\"${row.name}\" .rowData=\"${row}\"></testgrid-grid-row>`)}\n    `;\n    }\n    async fetchTabGrid() {\n        this.fetchTabGridRows();\n        this.fetchTabGridHeaders();\n    }\n    async fetchTabGridRows() {\n        this.tabGridRows = [];\n        try {\n            const response = await fetch(`http://${process.env.API_HOST}:${process.env.API_PORT}/api/v1/dashboards/${this.dashboardName}/tabs/${this.tabName}/rows`);\n            if (!response.ok) {\n                throw new Error(`HTTP error: ${response.status}`);\n            }\n            const data = ListRowsResponse.fromJson(await response.json());\n            var rows = [];\n            data.rows.forEach(row => rows.push(row));\n            this.tabGridRows = rows;\n        }\n        catch (error) {\n            console.error(`Could not get grid rows: ${error}`);\n        }\n    }\n    async fetchTabGridHeaders() {\n        try {\n            const response = await fetch(`http://${process.env.API_HOST}:${process.env.API_PORT}/api/v1/dashboards/${this.dashboardName}/tabs/${this.tabName}/headers`);\n            if (!response.ok) {\n                throw new Error(`HTTP error: ${response.status}`);\n            }\n            const data = ListHeadersResponse.fromJson(await response.json());\n            this.tabGridHeaders = data;\n        }\n        catch (error) {\n            console.error(`Could not get grid headers: ${error}`);\n        }\n    }\n}",
          "description": "Class definition for `testgrid-grid` component.\nRenders the test results grid."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGrid",
          "declaration": {
            "name": "TestgridGrid",
            "module": "out-tsc/src/grid/testgrid-grid.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/group/testgrid-group-content.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridGroupContent",
          "default": "class TestgridGroupContent extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.dashboardNames = [];\n        this.activeIndex = 0;\n        this.groupName = '';\n    }\n    // set the functionality when any tab is clicked on\n    onDashboardActivated(event) {\n        const dashboardIndex = event.detail.index;\n        if (dashboardIndex === this.activeIndex) {\n            return;\n        }\n        this.tabName = undefined;\n        // change from group view to dashboard view or between dashboard views\n        if ((this.activeIndex === 0) || (this.activeIndex !== 0 && dashboardIndex !== 0)) {\n            this.dashboardName = this.dashboardNames[dashboardIndex];\n            navigateDashboardWithoutReload(this.groupName, this.dashboardName);\n        }\n        // change from dashboard view to group view\n        else {\n            this.dashboardName = undefined;\n            navigateGroup(this.groupName, false);\n        }\n        this.activeIndex = dashboardIndex;\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked when a component is added to the document's DOM.\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        this.fetchDashboardNames();\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked when element properties are changed.\n     */\n    willUpdate(changedProperties) {\n        if (changedProperties.has('dashboardName')) {\n            this.highlightIndex(this.dashboardName);\n        }\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked on each update to perform rendering tasks.\n     */\n    render() {\n        var tabBar = html `${\n        // make sure we only render the tabs when there are tabs\n        when(this.dashboardNames.length > 0, () => html `\n        <mwc-tab-bar .activeIndex=${this.activeIndex} @MDCTabBar:activated=\"${this.onDashboardActivated}\">\n          ${map(this.dashboardNames, (name) => html `<mwc-tab label=${name}></mwc-tab>`)}\n        </mwc-tab-bar>`)}`;\n        return html `\n      ${tabBar}\n      ${!this.dashboardName ?\n            html `<testgrid-group-summary .groupName=${this.groupName}></testgrid-group-summary>` :\n            html `<testgrid-dashboard-content .groupName=${this.groupName} .dashboardName=${this.dashboardName} .tabName=${this.tabName}></testgrid-dashboard-content>`}\n    `;\n    }\n    // fetch the tab names to populate the tab bar\n    async fetchDashboardNames() {\n        try {\n            const response = await fetch(`http://${process.env.API_HOST}:${process.env.API_PORT}/api/v1/dashboard-groups/${this.groupName}`);\n            if (!response.ok) {\n                throw new Error(`HTTP error: ${response.status}`);\n            }\n            const data = GetDashboardGroupResponse.fromJson(await response.json());\n            var dashboardNames = [`${this.groupName}`];\n            data.dashboards.forEach(dashboard => {\n                dashboardNames.push(dashboard.name);\n            });\n            this.dashboardNames = dashboardNames;\n            this.highlightIndex(this.dashboardName);\n        }\n        catch (error) {\n            console.error(`Could not get dashboards for the group: ${error}`);\n        }\n    }\n    // identify which tab to highlight on the tab bar\n    highlightIndex(dashboardName) {\n        if (dashboardName === undefined) {\n            this.activeIndex = 0;\n            return;\n        }\n        var index = this.dashboardNames.indexOf(dashboardName);\n        if (index > -1) {\n            this.activeIndex = index;\n        }\n    }\n}",
          "description": "Class definition for the `testgrid-group-content` element.\nActs as a container which can toggle between group summary view or dashboard-content element.\nRenders the tab bar with dashboard names irrespective of the view."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGroupContent",
          "declaration": {
            "name": "TestgridGroupContent",
            "module": "out-tsc/src/group/testgrid-group-content.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/group/testgrid-group-summary.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridGroupSummary",
          "default": "class TestgridGroupSummary extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.groupName = '';\n        this.dashboardSummaries = [];\n    }\n    render() {\n        return html `\n      <link\n        rel=\"stylesheet\"\n        href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      />\n      <table>\n        <thead>\n          <tr>\n            <th>Status</th>\n            <th>Dashboard</th>\n            <th>Health</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${map(this.dashboardSummaries, (ds) => html `\n              <tr>\n                <td><i class=\"material-icons ${ds.overallStatus}\">${ds.icon}</i></td>\n                <td>${ds.name}</td>\n                <td>${ds.tabDescription}</td>\n              </tr>\n            `)}\n        </tbody>\n      </table>\n    `;\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this.fetchDashboardSummaries();\n    }\n    async fetchDashboardSummaries() {\n        try {\n            const response = await fetch(`http://${process.env.API_HOST}:${process.env.API_PORT}/api/v1/dashboard-groups/${this.groupName}/dashboard-summaries`);\n            if (!response.ok) {\n                throw new Error(`HTTP error: ${response.status}`);\n            }\n            const data = ListDashboardSummariesResponse.fromJson(await response.json());\n            var summaries = [];\n            data.dashboardSummaries.forEach(summary => summaries.push(this.convertResponse(summary)));\n            this.dashboardSummaries = summaries;\n        }\n        catch (error) {\n            console.error(`Could not get grid rows: ${error}`);\n        }\n    }\n    convertResponse(summary) {\n        const sortedStatuses = [\n            \"PASSING\",\n            \"ACCEPTABLE\",\n            \"FLAKY\",\n            \"FAILING\",\n            \"STALE\",\n            \"BROKEN\",\n            \"PENDING\"\n        ];\n        var numPassing = 0;\n        var total = 0;\n        for (const key in summary.tabStatusCount) {\n            if (key === \"PASSING\") {\n                numPassing = summary.tabStatusCount[key];\n            }\n            total += summary.tabStatusCount[key];\n        }\n        var prefix = `${numPassing} / ${total} PASSING`;\n        var descriptions = [];\n        sortedStatuses.forEach(status => {\n            if (summary.tabStatusCount[status] > 0) {\n                descriptions.push(`${summary.tabStatusCount[status]} ${status}`);\n            }\n        });\n        if (descriptions.length > 0) {\n            prefix += \" (\" + descriptions.join(\", \") + \")\";\n        }\n        const rds = {\n            name: summary.name,\n            overallStatus: summary.overallStatus,\n            icon: TabStatusIcon.get(summary.overallStatus),\n            tabDescription: prefix\n        };\n        return rds;\n    }\n}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridGroupSummary",
          "declaration": {
            "name": "TestgridGroupSummary",
            "module": "out-tsc/src/group/testgrid-group-summary.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/navigation/testgrid-dashboard-router.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridDashboardRouter",
          "default": "class TestgridDashboardRouter extends LitElement {\n    constructor() {\n        super(...arguments);\n        // passed down from root router to perform correct navigation\n        this.groupName = '';\n        this.routes = new Routes(this, [\n            {\n                path: 'dashboards/:dashboard',\n                render: (params) => html `<testgrid-group-content .groupName=${this.groupName} .dashboardName=${params.dashboard}></testgrid-group-content>`,\n            },\n            {\n                path: 'dashboards/:dashboard/*',\n                render: (params) => html `<testgrid-tab-router .groupName=${this.groupName} .dashboardName=${params.dashboard}></testgrid-tab-router>`,\n            },\n        ]);\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked on each update to perform rendering tasks.\n     */\n    render() {\n        return html `${this.routes.outlet()}`;\n    }\n}",
          "description": "Class definition for the `testgrid-dashboard-router` element.\nHandles the dashboard level routing logic.\nRenders the dashboard summary view within group-content element or continues\nwith the next level router."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridDashboardRouter",
          "declaration": {
            "name": "TestgridDashboardRouter",
            "module": "out-tsc/src/navigation/testgrid-dashboard-router.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/navigation/testgrid-root-router.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridRootRouter",
          "default": "class TestgridRootRouter extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.router = new Router(this, [\n            {\n                path: '/groups/:group/*',\n                render: (params) => html `<testgrid-dashboard-router .groupName=${params.group}></testgrid-dashboard-router>`,\n            },\n            {\n                path: '/groups/:group',\n                render: (params) => html `<testgrid-group-content .groupName=${params.group}></testgrid-group-content>`,\n            },\n            {\n                path: '/',\n                render: () => html `<testgrid-index></testgrid-index>`,\n            },\n        ]);\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked when a component is added to the document's DOM.\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        window.addEventListener('location-changed', () => {\n            this.router.goto(location.pathname);\n        });\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked on each update to perform rendering tasks.\n     */\n    render() {\n        return html `${this.router.outlet()}`;\n    }\n}",
          "description": "Class definition for the `testgrid-root-router` element.\nHandles the top-level routing logic.\nRenders the index page, main container component or passes down the data to dashboard level router."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridRootRouter",
          "declaration": {
            "name": "TestgridRootRouter",
            "module": "out-tsc/src/navigation/testgrid-root-router.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/navigation/testgrid-tab-router.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestgridTabRouter",
          "default": "class TestgridTabRouter extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.groupName = '';\n        this.dashboardName = '';\n        this.routes = new Routes(this, [\n            {\n                path: 'tabs/:tab',\n                render: (params) => html `<testgrid-group-content .groupName=${this.groupName} .dashboardName=${this.dashboardName} .tabName=${params.tab}></testgrid-group-content>`,\n            },\n        ]);\n    }\n    /**\n     * Lit-element lifecycle method.\n     * Invoked on each update to perform rendering tasks.\n     */\n    render() {\n        return html `${this.routes.outlet()}`;\n    }\n}",
          "description": "Class definition for the `testgrid-tab-router` element.\nHandles the tab level routing logic.\nRenders the grid view within dashboard-content within group-content"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestgridTabRouter",
          "declaration": {
            "name": "TestgridTabRouter",
            "module": "out-tsc/src/navigation/testgrid-tab-router.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/utils/navigation.js",
      "declarations": [
        {
          "kind": "function",
          "name": "navigate",
          "parameters": [
            {
              "name": "name"
            },
            {
              "name": "path",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Navigates application to a specified page."
        },
        {
          "kind": "function",
          "name": "navigateTabWithoutReload",
          "parameters": [
            {
              "name": "group"
            },
            {
              "name": "dashboard",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "tab",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Changes the URL without reloading"
        },
        {
          "kind": "function",
          "name": "navigateDashboardWithoutReload",
          "parameters": [
            {
              "name": "group",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "dashboard",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Navigates to the dashboard URL without reload"
        },
        {
          "kind": "function",
          "name": "navigateGroup",
          "parameters": [
            {
              "name": "group",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "reload"
            }
          ],
          "description": "Navigates to the group URL"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "navigate",
          "declaration": {
            "name": "navigate",
            "module": "out-tsc/src/utils/navigation.js"
          }
        },
        {
          "kind": "js",
          "name": "navigateTabWithoutReload",
          "declaration": {
            "name": "navigateTabWithoutReload",
            "module": "out-tsc/src/utils/navigation.js"
          }
        },
        {
          "kind": "js",
          "name": "navigateDashboardWithoutReload",
          "declaration": {
            "name": "navigateDashboardWithoutReload",
            "module": "out-tsc/src/utils/navigation.js"
          }
        },
        {
          "kind": "js",
          "name": "navigateGroup",
          "declaration": {
            "name": "navigateGroup",
            "module": "out-tsc/src/utils/navigation.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/gen/google/protobuf/timestamp.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Timestamp",
          "default": "new Timestamp$Type()"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Timestamp",
          "declaration": {
            "name": "Timestamp",
            "module": "src/gen/google/protobuf/timestamp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/gen/pb/config/config.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestNameConfig",
          "default": "new TestNameConfig$Type()"
        },
        {
          "kind": "variable",
          "name": "TestNameConfig_NameElement",
          "default": "new TestNameConfig_NameElement$Type()"
        },
        {
          "kind": "variable",
          "name": "Notification",
          "default": "new Notification$Type()"
        },
        {
          "kind": "variable",
          "name": "TestGroup",
          "default": "new TestGroup$Type()"
        },
        {
          "kind": "variable",
          "name": "TestGroup_ColumnHeader",
          "default": "new TestGroup_ColumnHeader$Type()"
        },
        {
          "kind": "variable",
          "name": "TestGroup_TestAnnotation",
          "default": "new TestGroup_TestAnnotation$Type()"
        },
        {
          "kind": "variable",
          "name": "TestGroup_KeyValue",
          "default": "new TestGroup_KeyValue$Type()"
        },
        {
          "kind": "variable",
          "name": "TestGroup_ResultSource",
          "default": "new TestGroup_ResultSource$Type()"
        },
        {
          "kind": "variable",
          "name": "GCSConfig",
          "default": "new GCSConfig$Type()"
        },
        {
          "kind": "variable",
          "name": "IssueGatherOptions",
          "default": "new IssueGatherOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "TestMetadataOptions",
          "default": "new TestMetadataOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "AutoBugOptions",
          "default": "new AutoBugOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "AutoBugOptions_DefaultTestMetadata",
          "default": "new AutoBugOptions_DefaultTestMetadata$Type()"
        },
        {
          "kind": "variable",
          "name": "HotlistIdFromSource",
          "default": "new HotlistIdFromSource$Type()"
        },
        {
          "kind": "variable",
          "name": "Dashboard",
          "default": "new Dashboard$Type()"
        },
        {
          "kind": "variable",
          "name": "LinkTemplate",
          "default": "new LinkTemplate$Type()"
        },
        {
          "kind": "variable",
          "name": "LinkOptionsTemplate",
          "default": "new LinkOptionsTemplate$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardTab",
          "default": "new DashboardTab$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardTabAlertOptions",
          "default": "new DashboardTabAlertOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardTabFlakinessAlertOptions",
          "default": "new DashboardTabFlakinessAlertOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardTabStatusCustomizationOptions",
          "default": "new DashboardTabStatusCustomizationOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardGroup",
          "default": "new DashboardGroup$Type()"
        },
        {
          "kind": "variable",
          "name": "Configuration",
          "default": "new Configuration$Type()"
        },
        {
          "kind": "variable",
          "name": "HealthAnalysisOptions",
          "default": "new HealthAnalysisOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "DefaultConfiguration",
          "default": "new DefaultConfiguration$Type()"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestNameConfig",
          "declaration": {
            "name": "TestNameConfig",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestNameConfig_NameElement",
          "declaration": {
            "name": "TestNameConfig_NameElement",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "Notification",
          "declaration": {
            "name": "Notification",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestGroup",
          "declaration": {
            "name": "TestGroup",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestGroup_ColumnHeader",
          "declaration": {
            "name": "TestGroup_ColumnHeader",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestGroup_TestAnnotation",
          "declaration": {
            "name": "TestGroup_TestAnnotation",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestGroup_KeyValue",
          "declaration": {
            "name": "TestGroup_KeyValue",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestGroup_ResultSource",
          "declaration": {
            "name": "TestGroup_ResultSource",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "GCSConfig",
          "declaration": {
            "name": "GCSConfig",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "IssueGatherOptions",
          "declaration": {
            "name": "IssueGatherOptions",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestMetadataOptions",
          "declaration": {
            "name": "TestMetadataOptions",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "AutoBugOptions",
          "declaration": {
            "name": "AutoBugOptions",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "AutoBugOptions_DefaultTestMetadata",
          "declaration": {
            "name": "AutoBugOptions_DefaultTestMetadata",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "HotlistIdFromSource",
          "declaration": {
            "name": "HotlistIdFromSource",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "Dashboard",
          "declaration": {
            "name": "Dashboard",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "LinkTemplate",
          "declaration": {
            "name": "LinkTemplate",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "LinkOptionsTemplate",
          "declaration": {
            "name": "LinkOptionsTemplate",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTab",
          "declaration": {
            "name": "DashboardTab",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTabAlertOptions",
          "declaration": {
            "name": "DashboardTabAlertOptions",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTabFlakinessAlertOptions",
          "declaration": {
            "name": "DashboardTabFlakinessAlertOptions",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTabStatusCustomizationOptions",
          "declaration": {
            "name": "DashboardTabStatusCustomizationOptions",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "DashboardGroup",
          "declaration": {
            "name": "DashboardGroup",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "Configuration",
          "declaration": {
            "name": "Configuration",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "HealthAnalysisOptions",
          "declaration": {
            "name": "HealthAnalysisOptions",
            "module": "src/gen/pb/config/config.ts"
          }
        },
        {
          "kind": "js",
          "name": "DefaultConfiguration",
          "declaration": {
            "name": "DefaultConfiguration",
            "module": "src/gen/pb/config/config.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/gen/pb/custom_evaluator/custom_evaluator.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "RuleSet",
          "default": "new RuleSet$Type()"
        },
        {
          "kind": "variable",
          "name": "Rule",
          "default": "new Rule$Type()"
        },
        {
          "kind": "variable",
          "name": "TestResultComparison",
          "default": "new TestResultComparison$Type()"
        },
        {
          "kind": "variable",
          "name": "Comparison",
          "default": "new Comparison$Type()"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RuleSet",
          "declaration": {
            "name": "RuleSet",
            "module": "src/gen/pb/custom_evaluator/custom_evaluator.ts"
          }
        },
        {
          "kind": "js",
          "name": "Rule",
          "declaration": {
            "name": "Rule",
            "module": "src/gen/pb/custom_evaluator/custom_evaluator.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestResultComparison",
          "declaration": {
            "name": "TestResultComparison",
            "module": "src/gen/pb/custom_evaluator/custom_evaluator.ts"
          }
        },
        {
          "kind": "js",
          "name": "Comparison",
          "declaration": {
            "name": "Comparison",
            "module": "src/gen/pb/custom_evaluator/custom_evaluator.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/gen/pb/state/state.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "Property",
          "default": "new Property$Type()"
        },
        {
          "kind": "variable",
          "name": "Metric",
          "default": "new Metric$Type()"
        },
        {
          "kind": "variable",
          "name": "UpdatePhaseData",
          "default": "new UpdatePhaseData$Type()"
        },
        {
          "kind": "variable",
          "name": "UpdateInfo",
          "default": "new UpdateInfo$Type()"
        },
        {
          "kind": "variable",
          "name": "AlertInfo",
          "default": "new AlertInfo$Type()"
        },
        {
          "kind": "variable",
          "name": "TestMetadata",
          "default": "new TestMetadata$Type()"
        },
        {
          "kind": "variable",
          "name": "Column",
          "default": "new Column$Type()"
        },
        {
          "kind": "variable",
          "name": "Stats",
          "default": "new Stats$Type()"
        },
        {
          "kind": "variable",
          "name": "Row",
          "default": "new Row$Type()"
        },
        {
          "kind": "variable",
          "name": "Grid",
          "default": "new Grid$Type()"
        },
        {
          "kind": "variable",
          "name": "Cluster",
          "default": "new Cluster$Type()"
        },
        {
          "kind": "variable",
          "name": "ClusterRow",
          "default": "new ClusterRow$Type()"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Property",
          "declaration": {
            "name": "Property",
            "module": "src/gen/pb/state/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "Metric",
          "declaration": {
            "name": "Metric",
            "module": "src/gen/pb/state/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "UpdatePhaseData",
          "declaration": {
            "name": "UpdatePhaseData",
            "module": "src/gen/pb/state/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "UpdateInfo",
          "declaration": {
            "name": "UpdateInfo",
            "module": "src/gen/pb/state/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "AlertInfo",
          "declaration": {
            "name": "AlertInfo",
            "module": "src/gen/pb/state/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestMetadata",
          "declaration": {
            "name": "TestMetadata",
            "module": "src/gen/pb/state/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "Column",
          "declaration": {
            "name": "Column",
            "module": "src/gen/pb/state/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "Stats",
          "declaration": {
            "name": "Stats",
            "module": "src/gen/pb/state/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "Row",
          "declaration": {
            "name": "Row",
            "module": "src/gen/pb/state/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "Grid",
          "declaration": {
            "name": "Grid",
            "module": "src/gen/pb/state/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "Cluster",
          "declaration": {
            "name": "Cluster",
            "module": "src/gen/pb/state/state.ts"
          }
        },
        {
          "kind": "js",
          "name": "ClusterRow",
          "declaration": {
            "name": "ClusterRow",
            "module": "src/gen/pb/state/state.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/gen/pb/summary/summary.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FailingTestSummary",
          "default": "new FailingTestSummary$Type()"
        },
        {
          "kind": "variable",
          "name": "TestInfo",
          "default": "new TestInfo$Type()"
        },
        {
          "kind": "variable",
          "name": "HealthinessInfo",
          "default": "new HealthinessInfo$Type()"
        },
        {
          "kind": "variable",
          "name": "AlertingData",
          "default": "new AlertingData$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardTabSummary",
          "default": "new DashboardTabSummary$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardTabSummaryMetrics",
          "default": "new DashboardTabSummaryMetrics$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardSummary",
          "default": "new DashboardSummary$Type()"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FailingTestSummary",
          "declaration": {
            "name": "FailingTestSummary",
            "module": "src/gen/pb/summary/summary.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestInfo",
          "declaration": {
            "name": "TestInfo",
            "module": "src/gen/pb/summary/summary.ts"
          }
        },
        {
          "kind": "js",
          "name": "HealthinessInfo",
          "declaration": {
            "name": "HealthinessInfo",
            "module": "src/gen/pb/summary/summary.ts"
          }
        },
        {
          "kind": "js",
          "name": "AlertingData",
          "declaration": {
            "name": "AlertingData",
            "module": "src/gen/pb/summary/summary.ts"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTabSummary",
          "declaration": {
            "name": "DashboardTabSummary",
            "module": "src/gen/pb/summary/summary.ts"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTabSummaryMetrics",
          "declaration": {
            "name": "DashboardTabSummaryMetrics",
            "module": "src/gen/pb/summary/summary.ts"
          }
        },
        {
          "kind": "js",
          "name": "DashboardSummary",
          "declaration": {
            "name": "DashboardSummary",
            "module": "src/gen/pb/summary/summary.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/gen/pb/test_status/test_status.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/gen/google/protobuf/timestamp.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Timestamp",
          "default": "new Timestamp$Type()"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Timestamp",
          "declaration": {
            "name": "Timestamp",
            "module": "out-tsc/src/gen/google/protobuf/timestamp.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/gen/pb/config/config.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestGroup_TestsName"
        },
        {
          "kind": "variable",
          "name": "TestGroup_FallbackGrouping"
        },
        {
          "kind": "variable",
          "name": "TestGroup_PrimaryGrouping"
        },
        {
          "kind": "variable",
          "name": "AutoBugOptions_Priority",
          "description": "Scale of issue priority, used to indicate importance of issue."
        },
        {
          "kind": "variable",
          "name": "DashboardTabStatusCustomizationOptions_IgnoredTestStatus",
          "description": "Columns which contain cells with any status configure below will be\nignored. Ignored columns affect the computation of flakiness and\nnon-ignored number of runs."
        },
        {
          "kind": "variable",
          "name": "TestNameConfig",
          "default": "new TestNameConfig$Type()"
        },
        {
          "kind": "variable",
          "name": "TestNameConfig_NameElement",
          "default": "new TestNameConfig_NameElement$Type()"
        },
        {
          "kind": "variable",
          "name": "Notification",
          "default": "new Notification$Type()"
        },
        {
          "kind": "variable",
          "name": "TestGroup",
          "default": "new TestGroup$Type()"
        },
        {
          "kind": "variable",
          "name": "TestGroup_ColumnHeader",
          "default": "new TestGroup_ColumnHeader$Type()"
        },
        {
          "kind": "variable",
          "name": "TestGroup_TestAnnotation",
          "default": "new TestGroup_TestAnnotation$Type()"
        },
        {
          "kind": "variable",
          "name": "TestGroup_KeyValue",
          "default": "new TestGroup_KeyValue$Type()"
        },
        {
          "kind": "variable",
          "name": "TestGroup_ResultSource",
          "default": "new TestGroup_ResultSource$Type()"
        },
        {
          "kind": "variable",
          "name": "GCSConfig",
          "default": "new GCSConfig$Type()"
        },
        {
          "kind": "variable",
          "name": "IssueGatherOptions",
          "default": "new IssueGatherOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "TestMetadataOptions",
          "default": "new TestMetadataOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "AutoBugOptions",
          "default": "new AutoBugOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "AutoBugOptions_DefaultTestMetadata",
          "default": "new AutoBugOptions_DefaultTestMetadata$Type()"
        },
        {
          "kind": "variable",
          "name": "HotlistIdFromSource",
          "default": "new HotlistIdFromSource$Type()"
        },
        {
          "kind": "variable",
          "name": "Dashboard",
          "default": "new Dashboard$Type()"
        },
        {
          "kind": "variable",
          "name": "LinkTemplate",
          "default": "new LinkTemplate$Type()"
        },
        {
          "kind": "variable",
          "name": "LinkOptionsTemplate",
          "default": "new LinkOptionsTemplate$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardTab",
          "default": "new DashboardTab$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardTabAlertOptions",
          "default": "new DashboardTabAlertOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardTabFlakinessAlertOptions",
          "default": "new DashboardTabFlakinessAlertOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardTabStatusCustomizationOptions",
          "default": "new DashboardTabStatusCustomizationOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardGroup",
          "default": "new DashboardGroup$Type()"
        },
        {
          "kind": "variable",
          "name": "Configuration",
          "default": "new Configuration$Type()"
        },
        {
          "kind": "variable",
          "name": "HealthAnalysisOptions",
          "default": "new HealthAnalysisOptions$Type()"
        },
        {
          "kind": "variable",
          "name": "DefaultConfiguration",
          "default": "new DefaultConfiguration$Type()"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestGroup_TestsName",
          "declaration": {
            "name": "TestGroup_TestsName",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "TestGroup_FallbackGrouping",
          "declaration": {
            "name": "TestGroup_FallbackGrouping",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "TestGroup_PrimaryGrouping",
          "declaration": {
            "name": "TestGroup_PrimaryGrouping",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "AutoBugOptions_Priority",
          "declaration": {
            "name": "AutoBugOptions_Priority",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTabStatusCustomizationOptions_IgnoredTestStatus",
          "declaration": {
            "name": "DashboardTabStatusCustomizationOptions_IgnoredTestStatus",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "TestNameConfig",
          "declaration": {
            "name": "TestNameConfig",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "TestNameConfig_NameElement",
          "declaration": {
            "name": "TestNameConfig_NameElement",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "Notification",
          "declaration": {
            "name": "Notification",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "TestGroup",
          "declaration": {
            "name": "TestGroup",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "TestGroup_ColumnHeader",
          "declaration": {
            "name": "TestGroup_ColumnHeader",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "TestGroup_TestAnnotation",
          "declaration": {
            "name": "TestGroup_TestAnnotation",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "TestGroup_KeyValue",
          "declaration": {
            "name": "TestGroup_KeyValue",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "TestGroup_ResultSource",
          "declaration": {
            "name": "TestGroup_ResultSource",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "GCSConfig",
          "declaration": {
            "name": "GCSConfig",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "IssueGatherOptions",
          "declaration": {
            "name": "IssueGatherOptions",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "TestMetadataOptions",
          "declaration": {
            "name": "TestMetadataOptions",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "AutoBugOptions",
          "declaration": {
            "name": "AutoBugOptions",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "AutoBugOptions_DefaultTestMetadata",
          "declaration": {
            "name": "AutoBugOptions_DefaultTestMetadata",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "HotlistIdFromSource",
          "declaration": {
            "name": "HotlistIdFromSource",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "Dashboard",
          "declaration": {
            "name": "Dashboard",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "LinkTemplate",
          "declaration": {
            "name": "LinkTemplate",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "LinkOptionsTemplate",
          "declaration": {
            "name": "LinkOptionsTemplate",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTab",
          "declaration": {
            "name": "DashboardTab",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTabAlertOptions",
          "declaration": {
            "name": "DashboardTabAlertOptions",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTabFlakinessAlertOptions",
          "declaration": {
            "name": "DashboardTabFlakinessAlertOptions",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTabStatusCustomizationOptions",
          "declaration": {
            "name": "DashboardTabStatusCustomizationOptions",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardGroup",
          "declaration": {
            "name": "DashboardGroup",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "Configuration",
          "declaration": {
            "name": "Configuration",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "HealthAnalysisOptions",
          "declaration": {
            "name": "HealthAnalysisOptions",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        },
        {
          "kind": "js",
          "name": "DefaultConfiguration",
          "declaration": {
            "name": "DefaultConfiguration",
            "module": "out-tsc/src/gen/pb/config/config.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/gen/pb/custom_evaluator/custom_evaluator.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Comparison_Operator"
        },
        {
          "kind": "variable",
          "name": "RuleSet",
          "default": "new RuleSet$Type()"
        },
        {
          "kind": "variable",
          "name": "Rule",
          "default": "new Rule$Type()"
        },
        {
          "kind": "variable",
          "name": "TestResultComparison",
          "default": "new TestResultComparison$Type()"
        },
        {
          "kind": "variable",
          "name": "Comparison",
          "default": "new Comparison$Type()"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Comparison_Operator",
          "declaration": {
            "name": "Comparison_Operator",
            "module": "out-tsc/src/gen/pb/custom_evaluator/custom_evaluator.js"
          }
        },
        {
          "kind": "js",
          "name": "RuleSet",
          "declaration": {
            "name": "RuleSet",
            "module": "out-tsc/src/gen/pb/custom_evaluator/custom_evaluator.js"
          }
        },
        {
          "kind": "js",
          "name": "Rule",
          "declaration": {
            "name": "Rule",
            "module": "out-tsc/src/gen/pb/custom_evaluator/custom_evaluator.js"
          }
        },
        {
          "kind": "js",
          "name": "TestResultComparison",
          "declaration": {
            "name": "TestResultComparison",
            "module": "out-tsc/src/gen/pb/custom_evaluator/custom_evaluator.js"
          }
        },
        {
          "kind": "js",
          "name": "Comparison",
          "declaration": {
            "name": "Comparison",
            "module": "out-tsc/src/gen/pb/custom_evaluator/custom_evaluator.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/gen/pb/state/state.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Property",
          "default": "new Property$Type()"
        },
        {
          "kind": "variable",
          "name": "Metric",
          "default": "new Metric$Type()"
        },
        {
          "kind": "variable",
          "name": "UpdatePhaseData",
          "default": "new UpdatePhaseData$Type()"
        },
        {
          "kind": "variable",
          "name": "UpdateInfo",
          "default": "new UpdateInfo$Type()"
        },
        {
          "kind": "variable",
          "name": "AlertInfo",
          "default": "new AlertInfo$Type()"
        },
        {
          "kind": "variable",
          "name": "TestMetadata",
          "default": "new TestMetadata$Type()"
        },
        {
          "kind": "variable",
          "name": "Column",
          "default": "new Column$Type()"
        },
        {
          "kind": "variable",
          "name": "Stats",
          "default": "new Stats$Type()"
        },
        {
          "kind": "variable",
          "name": "Row",
          "default": "new Row$Type()"
        },
        {
          "kind": "variable",
          "name": "Grid",
          "default": "new Grid$Type()"
        },
        {
          "kind": "variable",
          "name": "Cluster",
          "default": "new Cluster$Type()"
        },
        {
          "kind": "variable",
          "name": "ClusterRow",
          "default": "new ClusterRow$Type()"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Property",
          "declaration": {
            "name": "Property",
            "module": "out-tsc/src/gen/pb/state/state.js"
          }
        },
        {
          "kind": "js",
          "name": "Metric",
          "declaration": {
            "name": "Metric",
            "module": "out-tsc/src/gen/pb/state/state.js"
          }
        },
        {
          "kind": "js",
          "name": "UpdatePhaseData",
          "declaration": {
            "name": "UpdatePhaseData",
            "module": "out-tsc/src/gen/pb/state/state.js"
          }
        },
        {
          "kind": "js",
          "name": "UpdateInfo",
          "declaration": {
            "name": "UpdateInfo",
            "module": "out-tsc/src/gen/pb/state/state.js"
          }
        },
        {
          "kind": "js",
          "name": "AlertInfo",
          "declaration": {
            "name": "AlertInfo",
            "module": "out-tsc/src/gen/pb/state/state.js"
          }
        },
        {
          "kind": "js",
          "name": "TestMetadata",
          "declaration": {
            "name": "TestMetadata",
            "module": "out-tsc/src/gen/pb/state/state.js"
          }
        },
        {
          "kind": "js",
          "name": "Column",
          "declaration": {
            "name": "Column",
            "module": "out-tsc/src/gen/pb/state/state.js"
          }
        },
        {
          "kind": "js",
          "name": "Stats",
          "declaration": {
            "name": "Stats",
            "module": "out-tsc/src/gen/pb/state/state.js"
          }
        },
        {
          "kind": "js",
          "name": "Row",
          "declaration": {
            "name": "Row",
            "module": "out-tsc/src/gen/pb/state/state.js"
          }
        },
        {
          "kind": "js",
          "name": "Grid",
          "declaration": {
            "name": "Grid",
            "module": "out-tsc/src/gen/pb/state/state.js"
          }
        },
        {
          "kind": "js",
          "name": "Cluster",
          "declaration": {
            "name": "Cluster",
            "module": "out-tsc/src/gen/pb/state/state.js"
          }
        },
        {
          "kind": "js",
          "name": "ClusterRow",
          "declaration": {
            "name": "ClusterRow",
            "module": "out-tsc/src/gen/pb/state/state.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/gen/pb/summary/summary.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestInfo_Trend"
        },
        {
          "kind": "variable",
          "name": "DashboardTabSummary_TabStatus"
        },
        {
          "kind": "variable",
          "name": "FailingTestSummary",
          "default": "new FailingTestSummary$Type()"
        },
        {
          "kind": "variable",
          "name": "TestInfo",
          "default": "new TestInfo$Type()"
        },
        {
          "kind": "variable",
          "name": "HealthinessInfo",
          "default": "new HealthinessInfo$Type()"
        },
        {
          "kind": "variable",
          "name": "AlertingData",
          "default": "new AlertingData$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardTabSummary",
          "default": "new DashboardTabSummary$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardTabSummaryMetrics",
          "default": "new DashboardTabSummaryMetrics$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardSummary",
          "default": "new DashboardSummary$Type()"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestInfo_Trend",
          "declaration": {
            "name": "TestInfo_Trend",
            "module": "out-tsc/src/gen/pb/summary/summary.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTabSummary_TabStatus",
          "declaration": {
            "name": "DashboardTabSummary_TabStatus",
            "module": "out-tsc/src/gen/pb/summary/summary.js"
          }
        },
        {
          "kind": "js",
          "name": "FailingTestSummary",
          "declaration": {
            "name": "FailingTestSummary",
            "module": "out-tsc/src/gen/pb/summary/summary.js"
          }
        },
        {
          "kind": "js",
          "name": "TestInfo",
          "declaration": {
            "name": "TestInfo",
            "module": "out-tsc/src/gen/pb/summary/summary.js"
          }
        },
        {
          "kind": "js",
          "name": "HealthinessInfo",
          "declaration": {
            "name": "HealthinessInfo",
            "module": "out-tsc/src/gen/pb/summary/summary.js"
          }
        },
        {
          "kind": "js",
          "name": "AlertingData",
          "declaration": {
            "name": "AlertingData",
            "module": "out-tsc/src/gen/pb/summary/summary.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTabSummary",
          "declaration": {
            "name": "DashboardTabSummary",
            "module": "out-tsc/src/gen/pb/summary/summary.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardTabSummaryMetrics",
          "declaration": {
            "name": "DashboardTabSummaryMetrics",
            "module": "out-tsc/src/gen/pb/summary/summary.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardSummary",
          "declaration": {
            "name": "DashboardSummary",
            "module": "out-tsc/src/gen/pb/summary/summary.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/gen/pb/test_status/test_status.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TestStatus"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestStatus",
          "declaration": {
            "name": "TestStatus",
            "module": "out-tsc/src/gen/pb/test_status/test_status.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/gen/pb/api/v1/data.client.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestGridDataClient",
          "members": [
            {
              "kind": "field",
              "name": "typeName"
            },
            {
              "kind": "field",
              "name": "methods"
            },
            {
              "kind": "field",
              "name": "options"
            },
            {
              "kind": "method",
              "name": "listDashboards",
              "return": {
                "type": {
                  "text": "UnaryCall<ListDashboardsRequest, ListDashboardsResponse>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "ListDashboardsRequest"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "RpcOptions"
                  }
                }
              ],
              "description": "GET /dashboards\nLists dashboard names"
            },
            {
              "kind": "method",
              "name": "listDashboardGroups",
              "return": {
                "type": {
                  "text": "UnaryCall<ListDashboardGroupsRequest, ListDashboardGroupsResponse>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "ListDashboardGroupsRequest"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "RpcOptions"
                  }
                }
              ],
              "description": "GET /dashboard-groups\nLists the dashboard group names"
            },
            {
              "kind": "method",
              "name": "listDashboardTabs",
              "return": {
                "type": {
                  "text": "UnaryCall<ListDashboardTabsRequest, ListDashboardTabsResponse>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "ListDashboardTabsRequest"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "RpcOptions"
                  }
                }
              ],
              "description": "GET /dashboards/{dashboard}/tabs\nLists the dashboard tab names"
            },
            {
              "kind": "method",
              "name": "getDashboard",
              "return": {
                "type": {
                  "text": "UnaryCall<GetDashboardRequest, GetDashboardResponse>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "GetDashboardRequest"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "RpcOptions"
                  }
                }
              ],
              "description": "GET /dashboards/{dashboard}\nReturns a Dashboard config's metadata\nExcludes subtabs, accessed through the /tabs list method instead"
            },
            {
              "kind": "method",
              "name": "getDashboardGroup",
              "return": {
                "type": {
                  "text": "UnaryCall<GetDashboardGroupRequest, GetDashboardGroupResponse>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "GetDashboardGroupRequest"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "RpcOptions"
                  }
                }
              ],
              "description": "GET /dashboard-groups/{dashboard-group}\nLists the dashboard names in that group"
            },
            {
              "kind": "method",
              "name": "listHeaders",
              "return": {
                "type": {
                  "text": "UnaryCall<ListHeadersRequest, ListHeadersResponse>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "ListHeadersRequest"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "RpcOptions"
                  }
                }
              ],
              "description": "GET /dashboards/{dashboard}/tabs/{tab}/headers\nReturns the headers for grid results"
            },
            {
              "kind": "method",
              "name": "listRows",
              "return": {
                "type": {
                  "text": "UnaryCall<ListRowsRequest, ListRowsResponse>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "ListRowsRequest"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "RpcOptions"
                  }
                }
              ],
              "description": "GET /dashboards/{dashboard}/tabs/{tab}/rows\nReturns information on grid rows, and data within those rows"
            },
            {
              "kind": "method",
              "name": "listTabSummaries",
              "return": {
                "type": {
                  "text": "UnaryCall<ListTabSummariesRequest, ListTabSummariesResponse>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "ListTabSummariesRequest"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "RpcOptions"
                  }
                }
              ],
              "description": "GET /dashboards/{dashboard}/tab-summaries\nReturns the list of tab summaries for dashboard."
            },
            {
              "kind": "method",
              "name": "getTabSummary",
              "return": {
                "type": {
                  "text": "UnaryCall<GetTabSummaryRequest, GetTabSummaryResponse>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "GetTabSummaryRequest"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "RpcOptions"
                  }
                }
              ],
              "description": "GET /dashboards/{dashboard}/tab-summaries/{tab}"
            },
            {
              "kind": "method",
              "name": "listDashboardSummaries",
              "return": {
                "type": {
                  "text": "UnaryCall<ListDashboardSummariesRequest, ListDashboardSummariesResponse>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "ListDashboardSummariesRequest"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "RpcOptions"
                  }
                }
              ],
              "description": "GET /dashboard-groups/{dashboard-group}/dashboard-summaries"
            },
            {
              "kind": "method",
              "name": "getDashboardSummary",
              "return": {
                "type": {
                  "text": "UnaryCall<GetDashboardSummaryRequest, GetDashboardSummaryResponse>"
                }
              },
              "parameters": [
                {
                  "name": "input",
                  "type": {
                    "text": "GetDashboardSummaryRequest"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "RpcOptions"
                  }
                }
              ],
              "description": "GET /dashboards/{dashboard}/summary"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestGridDataClient",
          "declaration": {
            "name": "TestGridDataClient",
            "module": "src/gen/pb/api/v1/data.client.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/gen/pb/api/v1/data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "ListDashboardsRequest",
          "default": "new ListDashboardsRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardsResponse",
          "default": "new ListDashboardsResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardGroupsRequest",
          "default": "new ListDashboardGroupsRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardGroupsResponse",
          "default": "new ListDashboardGroupsResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardTabsRequest",
          "default": "new ListDashboardTabsRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardTabsResponse",
          "default": "new ListDashboardTabsResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "GetDashboardRequest",
          "default": "new GetDashboardRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "GetDashboardResponse",
          "default": "new GetDashboardResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "GetDashboardGroupRequest",
          "default": "new GetDashboardGroupRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "GetDashboardGroupResponse",
          "default": "new GetDashboardGroupResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "ListHeadersRequest",
          "default": "new ListHeadersRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListHeadersResponse",
          "default": "new ListHeadersResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "ListHeadersResponse_Header",
          "default": "new ListHeadersResponse_Header$Type()"
        },
        {
          "kind": "variable",
          "name": "ListRowsRequest",
          "default": "new ListRowsRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListRowsResponse",
          "default": "new ListRowsResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "ListRowsResponse_Row",
          "default": "new ListRowsResponse_Row$Type()"
        },
        {
          "kind": "variable",
          "name": "ListRowsResponse_Cell",
          "default": "new ListRowsResponse_Cell$Type()"
        },
        {
          "kind": "variable",
          "name": "Resource",
          "default": "new Resource$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardResource",
          "default": "new DashboardResource$Type()"
        },
        {
          "kind": "variable",
          "name": "ListTabSummariesRequest",
          "default": "new ListTabSummariesRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListTabSummariesResponse",
          "default": "new ListTabSummariesResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "GetTabSummaryRequest",
          "default": "new GetTabSummaryRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "GetTabSummaryResponse",
          "default": "new GetTabSummaryResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardSummariesRequest",
          "default": "new ListDashboardSummariesRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardSummariesResponse",
          "default": "new ListDashboardSummariesResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "GetDashboardSummaryRequest",
          "default": "new GetDashboardSummaryRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "GetDashboardSummaryResponse",
          "default": "new GetDashboardSummaryResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "TabSummary",
          "default": "new TabSummary$Type()"
        },
        {
          "kind": "variable",
          "name": "FailuresSummary",
          "default": "new FailuresSummary$Type()"
        },
        {
          "kind": "variable",
          "name": "FailingTestInfo",
          "default": "new FailingTestInfo$Type()"
        },
        {
          "kind": "variable",
          "name": "FailureStats",
          "default": "new FailureStats$Type()"
        },
        {
          "kind": "variable",
          "name": "HealthinessSummary",
          "default": "new HealthinessSummary$Type()"
        },
        {
          "kind": "variable",
          "name": "FlakyTestInfo",
          "default": "new FlakyTestInfo$Type()"
        },
        {
          "kind": "variable",
          "name": "HealthinessStats",
          "default": "new HealthinessStats$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardSummary",
          "default": "new DashboardSummary$Type()"
        },
        {
          "kind": "variable",
          "name": "TestGridData",
          "default": "new ServiceType(\"testgrid.api.v1.TestGridData\", [\n    { name: \"ListDashboards\", options: {}, I: ListDashboardsRequest, O: ListDashboardsResponse },\n    { name: \"ListDashboardGroups\", options: {}, I: ListDashboardGroupsRequest, O: ListDashboardGroupsResponse },\n    { name: \"ListDashboardTabs\", options: {}, I: ListDashboardTabsRequest, O: ListDashboardTabsResponse },\n    { name: \"GetDashboard\", options: {}, I: GetDashboardRequest, O: GetDashboardResponse },\n    { name: \"GetDashboardGroup\", options: {}, I: GetDashboardGroupRequest, O: GetDashboardGroupResponse },\n    { name: \"ListHeaders\", options: {}, I: ListHeadersRequest, O: ListHeadersResponse },\n    { name: \"ListRows\", options: {}, I: ListRowsRequest, O: ListRowsResponse },\n    { name: \"ListTabSummaries\", options: {}, I: ListTabSummariesRequest, O: ListTabSummariesResponse },\n    { name: \"GetTabSummary\", options: {}, I: GetTabSummaryRequest, O: GetTabSummaryResponse },\n    { name: \"ListDashboardSummaries\", options: {}, I: ListDashboardSummariesRequest, O: ListDashboardSummariesResponse },\n    { name: \"GetDashboardSummary\", options: {}, I: GetDashboardSummaryRequest, O: GetDashboardSummaryResponse }\n])"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ListDashboardsRequest",
          "declaration": {
            "name": "ListDashboardsRequest",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardsResponse",
          "declaration": {
            "name": "ListDashboardsResponse",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardGroupsRequest",
          "declaration": {
            "name": "ListDashboardGroupsRequest",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardGroupsResponse",
          "declaration": {
            "name": "ListDashboardGroupsResponse",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardTabsRequest",
          "declaration": {
            "name": "ListDashboardTabsRequest",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardTabsResponse",
          "declaration": {
            "name": "ListDashboardTabsResponse",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "GetDashboardRequest",
          "declaration": {
            "name": "GetDashboardRequest",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "GetDashboardResponse",
          "declaration": {
            "name": "GetDashboardResponse",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "GetDashboardGroupRequest",
          "declaration": {
            "name": "GetDashboardGroupRequest",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "GetDashboardGroupResponse",
          "declaration": {
            "name": "GetDashboardGroupResponse",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListHeadersRequest",
          "declaration": {
            "name": "ListHeadersRequest",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListHeadersResponse",
          "declaration": {
            "name": "ListHeadersResponse",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListHeadersResponse_Header",
          "declaration": {
            "name": "ListHeadersResponse_Header",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListRowsRequest",
          "declaration": {
            "name": "ListRowsRequest",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListRowsResponse",
          "declaration": {
            "name": "ListRowsResponse",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListRowsResponse_Row",
          "declaration": {
            "name": "ListRowsResponse_Row",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListRowsResponse_Cell",
          "declaration": {
            "name": "ListRowsResponse_Cell",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "Resource",
          "declaration": {
            "name": "Resource",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "DashboardResource",
          "declaration": {
            "name": "DashboardResource",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListTabSummariesRequest",
          "declaration": {
            "name": "ListTabSummariesRequest",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListTabSummariesResponse",
          "declaration": {
            "name": "ListTabSummariesResponse",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "GetTabSummaryRequest",
          "declaration": {
            "name": "GetTabSummaryRequest",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "GetTabSummaryResponse",
          "declaration": {
            "name": "GetTabSummaryResponse",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardSummariesRequest",
          "declaration": {
            "name": "ListDashboardSummariesRequest",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardSummariesResponse",
          "declaration": {
            "name": "ListDashboardSummariesResponse",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "GetDashboardSummaryRequest",
          "declaration": {
            "name": "GetDashboardSummaryRequest",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "GetDashboardSummaryResponse",
          "declaration": {
            "name": "GetDashboardSummaryResponse",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "TabSummary",
          "declaration": {
            "name": "TabSummary",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "FailuresSummary",
          "declaration": {
            "name": "FailuresSummary",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "FailingTestInfo",
          "declaration": {
            "name": "FailingTestInfo",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "FailureStats",
          "declaration": {
            "name": "FailureStats",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "HealthinessSummary",
          "declaration": {
            "name": "HealthinessSummary",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "FlakyTestInfo",
          "declaration": {
            "name": "FlakyTestInfo",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "HealthinessStats",
          "declaration": {
            "name": "HealthinessStats",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "DashboardSummary",
          "declaration": {
            "name": "DashboardSummary",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        },
        {
          "kind": "js",
          "name": "TestGridData",
          "declaration": {
            "name": "TestGridData",
            "module": "src/gen/pb/api/v1/data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/gen/pb/api/v1/data.client.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TestGridDataClient",
          "members": [
            {
              "kind": "method",
              "name": "listDashboards",
              "parameters": [
                {
                  "name": "input"
                },
                {
                  "name": "options"
                }
              ],
              "description": "GET /dashboards\nLists dashboard names"
            },
            {
              "kind": "method",
              "name": "listDashboardGroups",
              "parameters": [
                {
                  "name": "input"
                },
                {
                  "name": "options"
                }
              ],
              "description": "GET /dashboard-groups\nLists the dashboard group names"
            },
            {
              "kind": "method",
              "name": "listDashboardTabs",
              "parameters": [
                {
                  "name": "input"
                },
                {
                  "name": "options"
                }
              ],
              "description": "GET /dashboards/{dashboard}/tabs\nLists the dashboard tab names"
            },
            {
              "kind": "method",
              "name": "getDashboard",
              "parameters": [
                {
                  "name": "input"
                },
                {
                  "name": "options"
                }
              ],
              "description": "GET /dashboards/{dashboard}\nReturns a Dashboard config's metadata\nExcludes subtabs, accessed through the /tabs list method instead"
            },
            {
              "kind": "method",
              "name": "getDashboardGroup",
              "parameters": [
                {
                  "name": "input"
                },
                {
                  "name": "options"
                }
              ],
              "description": "GET /dashboard-groups/{dashboard-group}\nLists the dashboard names in that group"
            },
            {
              "kind": "method",
              "name": "listHeaders",
              "parameters": [
                {
                  "name": "input"
                },
                {
                  "name": "options"
                }
              ],
              "description": "GET /dashboards/{dashboard}/tabs/{tab}/headers\nReturns the headers for grid results"
            },
            {
              "kind": "method",
              "name": "listRows",
              "parameters": [
                {
                  "name": "input"
                },
                {
                  "name": "options"
                }
              ],
              "description": "GET /dashboards/{dashboard}/tabs/{tab}/rows\nReturns information on grid rows, and data within those rows"
            },
            {
              "kind": "method",
              "name": "listTabSummaries",
              "parameters": [
                {
                  "name": "input"
                },
                {
                  "name": "options"
                }
              ],
              "description": "GET /dashboards/{dashboard}/tab-summaries\nReturns the list of tab summaries for dashboard."
            },
            {
              "kind": "method",
              "name": "getTabSummary",
              "parameters": [
                {
                  "name": "input"
                },
                {
                  "name": "options"
                }
              ],
              "description": "GET /dashboards/{dashboard}/tab-summaries/{tab}"
            },
            {
              "kind": "method",
              "name": "listDashboardSummaries",
              "parameters": [
                {
                  "name": "input"
                },
                {
                  "name": "options"
                }
              ],
              "description": "GET /dashboard-groups/{dashboard-group}/dashboard-summaries"
            },
            {
              "kind": "method",
              "name": "getDashboardSummary",
              "parameters": [
                {
                  "name": "input"
                },
                {
                  "name": "options"
                }
              ],
              "description": "GET /dashboards/{dashboard}/summary"
            },
            {
              "kind": "field",
              "name": "_transport",
              "default": "_transport"
            },
            {
              "kind": "field",
              "name": "typeName"
            },
            {
              "kind": "field",
              "name": "methods"
            },
            {
              "kind": "field",
              "name": "options"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TestGridDataClient",
          "declaration": {
            "name": "TestGridDataClient",
            "module": "out-tsc/src/gen/pb/api/v1/data.client.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "out-tsc/src/gen/pb/api/v1/data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ListDashboardsRequest",
          "default": "new ListDashboardsRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardsResponse",
          "default": "new ListDashboardsResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardGroupsRequest",
          "default": "new ListDashboardGroupsRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardGroupsResponse",
          "default": "new ListDashboardGroupsResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardTabsRequest",
          "default": "new ListDashboardTabsRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardTabsResponse",
          "default": "new ListDashboardTabsResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "GetDashboardRequest",
          "default": "new GetDashboardRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "GetDashboardResponse",
          "default": "new GetDashboardResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "GetDashboardGroupRequest",
          "default": "new GetDashboardGroupRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "GetDashboardGroupResponse",
          "default": "new GetDashboardGroupResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "ListHeadersRequest",
          "default": "new ListHeadersRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListHeadersResponse",
          "default": "new ListHeadersResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "ListHeadersResponse_Header",
          "default": "new ListHeadersResponse_Header$Type()"
        },
        {
          "kind": "variable",
          "name": "ListRowsRequest",
          "default": "new ListRowsRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListRowsResponse",
          "default": "new ListRowsResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "ListRowsResponse_Row",
          "default": "new ListRowsResponse_Row$Type()"
        },
        {
          "kind": "variable",
          "name": "ListRowsResponse_Cell",
          "default": "new ListRowsResponse_Cell$Type()"
        },
        {
          "kind": "variable",
          "name": "Resource",
          "default": "new Resource$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardResource",
          "default": "new DashboardResource$Type()"
        },
        {
          "kind": "variable",
          "name": "ListTabSummariesRequest",
          "default": "new ListTabSummariesRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListTabSummariesResponse",
          "default": "new ListTabSummariesResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "GetTabSummaryRequest",
          "default": "new GetTabSummaryRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "GetTabSummaryResponse",
          "default": "new GetTabSummaryResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardSummariesRequest",
          "default": "new ListDashboardSummariesRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "ListDashboardSummariesResponse",
          "default": "new ListDashboardSummariesResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "GetDashboardSummaryRequest",
          "default": "new GetDashboardSummaryRequest$Type()"
        },
        {
          "kind": "variable",
          "name": "GetDashboardSummaryResponse",
          "default": "new GetDashboardSummaryResponse$Type()"
        },
        {
          "kind": "variable",
          "name": "TabSummary",
          "default": "new TabSummary$Type()"
        },
        {
          "kind": "variable",
          "name": "FailuresSummary",
          "default": "new FailuresSummary$Type()"
        },
        {
          "kind": "variable",
          "name": "FailingTestInfo",
          "default": "new FailingTestInfo$Type()"
        },
        {
          "kind": "variable",
          "name": "FailureStats",
          "default": "new FailureStats$Type()"
        },
        {
          "kind": "variable",
          "name": "HealthinessSummary",
          "default": "new HealthinessSummary$Type()"
        },
        {
          "kind": "variable",
          "name": "FlakyTestInfo",
          "default": "new FlakyTestInfo$Type()"
        },
        {
          "kind": "variable",
          "name": "HealthinessStats",
          "default": "new HealthinessStats$Type()"
        },
        {
          "kind": "variable",
          "name": "DashboardSummary",
          "default": "new DashboardSummary$Type()"
        },
        {
          "kind": "variable",
          "name": "TestGridData",
          "default": "new ServiceType(\"testgrid.api.v1.TestGridData\", [\n    { name: \"ListDashboards\", options: {}, I: ListDashboardsRequest, O: ListDashboardsResponse },\n    { name: \"ListDashboardGroups\", options: {}, I: ListDashboardGroupsRequest, O: ListDashboardGroupsResponse },\n    { name: \"ListDashboardTabs\", options: {}, I: ListDashboardTabsRequest, O: ListDashboardTabsResponse },\n    { name: \"GetDashboard\", options: {}, I: GetDashboardRequest, O: GetDashboardResponse },\n    { name: \"GetDashboardGroup\", options: {}, I: GetDashboardGroupRequest, O: GetDashboardGroupResponse },\n    { name: \"ListHeaders\", options: {}, I: ListHeadersRequest, O: ListHeadersResponse },\n    { name: \"ListRows\", options: {}, I: ListRowsRequest, O: ListRowsResponse },\n    { name: \"ListTabSummaries\", options: {}, I: ListTabSummariesRequest, O: ListTabSummariesResponse },\n    { name: \"GetTabSummary\", options: {}, I: GetTabSummaryRequest, O: GetTabSummaryResponse },\n    { name: \"ListDashboardSummaries\", options: {}, I: ListDashboardSummariesRequest, O: ListDashboardSummariesResponse },\n    { name: \"GetDashboardSummary\", options: {}, I: GetDashboardSummaryRequest, O: GetDashboardSummaryResponse }\n])"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ListDashboardsRequest",
          "declaration": {
            "name": "ListDashboardsRequest",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardsResponse",
          "declaration": {
            "name": "ListDashboardsResponse",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardGroupsRequest",
          "declaration": {
            "name": "ListDashboardGroupsRequest",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardGroupsResponse",
          "declaration": {
            "name": "ListDashboardGroupsResponse",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardTabsRequest",
          "declaration": {
            "name": "ListDashboardTabsRequest",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardTabsResponse",
          "declaration": {
            "name": "ListDashboardTabsResponse",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "GetDashboardRequest",
          "declaration": {
            "name": "GetDashboardRequest",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "GetDashboardResponse",
          "declaration": {
            "name": "GetDashboardResponse",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "GetDashboardGroupRequest",
          "declaration": {
            "name": "GetDashboardGroupRequest",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "GetDashboardGroupResponse",
          "declaration": {
            "name": "GetDashboardGroupResponse",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListHeadersRequest",
          "declaration": {
            "name": "ListHeadersRequest",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListHeadersResponse",
          "declaration": {
            "name": "ListHeadersResponse",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListHeadersResponse_Header",
          "declaration": {
            "name": "ListHeadersResponse_Header",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListRowsRequest",
          "declaration": {
            "name": "ListRowsRequest",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListRowsResponse",
          "declaration": {
            "name": "ListRowsResponse",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListRowsResponse_Row",
          "declaration": {
            "name": "ListRowsResponse_Row",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListRowsResponse_Cell",
          "declaration": {
            "name": "ListRowsResponse_Cell",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "Resource",
          "declaration": {
            "name": "Resource",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardResource",
          "declaration": {
            "name": "DashboardResource",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListTabSummariesRequest",
          "declaration": {
            "name": "ListTabSummariesRequest",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListTabSummariesResponse",
          "declaration": {
            "name": "ListTabSummariesResponse",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "GetTabSummaryRequest",
          "declaration": {
            "name": "GetTabSummaryRequest",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "GetTabSummaryResponse",
          "declaration": {
            "name": "GetTabSummaryResponse",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardSummariesRequest",
          "declaration": {
            "name": "ListDashboardSummariesRequest",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "ListDashboardSummariesResponse",
          "declaration": {
            "name": "ListDashboardSummariesResponse",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "GetDashboardSummaryRequest",
          "declaration": {
            "name": "GetDashboardSummaryRequest",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "GetDashboardSummaryResponse",
          "declaration": {
            "name": "GetDashboardSummaryResponse",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "TabSummary",
          "declaration": {
            "name": "TabSummary",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "FailuresSummary",
          "declaration": {
            "name": "FailuresSummary",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "FailingTestInfo",
          "declaration": {
            "name": "FailingTestInfo",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "FailureStats",
          "declaration": {
            "name": "FailureStats",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "HealthinessSummary",
          "declaration": {
            "name": "HealthinessSummary",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "FlakyTestInfo",
          "declaration": {
            "name": "FlakyTestInfo",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "HealthinessStats",
          "declaration": {
            "name": "HealthinessStats",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "DashboardSummary",
          "declaration": {
            "name": "DashboardSummary",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        },
        {
          "kind": "js",
          "name": "TestGridData",
          "declaration": {
            "name": "TestGridData",
            "module": "out-tsc/src/gen/pb/api/v1/data.js"
          }
        }
      ]
    }
  ]
}
