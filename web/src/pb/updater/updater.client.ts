// @generated by protobuf-ts 2.8.1
// @generated from protobuf file "pb/updater/updater.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from '@protobuf-ts/runtime-rpc';
import type { ServiceInfo } from '@protobuf-ts/runtime-rpc';
import { Updater } from './updater';
import { stackIntercept } from '@protobuf-ts/runtime-rpc';
import type { UpdateResponse } from './updater';
import type { UpdateRequest } from './updater';
import type { UnaryCall } from '@protobuf-ts/runtime-rpc';
import type { RpcOptions } from '@protobuf-ts/runtime-rpc';
/**
 * An updater server updates test groups upon request.
 *
 * @generated from protobuf service Updater
 */
export interface IUpdaterClient {
  /**
   * Updates a test group state object either incrementally or by creating it.
   *
   * @generated from protobuf rpc: Update(UpdateRequest) returns (UpdateResponse);
   */
  update(
    input: UpdateRequest,
    options?: RpcOptions
  ): UnaryCall<UpdateRequest, UpdateResponse>;
  /**
   * Updates a bug state object for a given test group.
   *
   * @generated from protobuf rpc: UpdateBugs(UpdateRequest) returns (UpdateResponse);
   */
  updateBugs(
    input: UpdateRequest,
    options?: RpcOptions
  ): UnaryCall<UpdateRequest, UpdateResponse>;
}
/**
 * An updater server updates test groups upon request.
 *
 * @generated from protobuf service Updater
 */
export class UpdaterClient implements IUpdaterClient, ServiceInfo {
  typeName = Updater.typeName;
  methods = Updater.methods;
  options = Updater.options;
  constructor(private readonly _transport: RpcTransport) {}
  /**
   * Updates a test group state object either incrementally or by creating it.
   *
   * @generated from protobuf rpc: Update(UpdateRequest) returns (UpdateResponse);
   */
  update(
    input: UpdateRequest,
    options?: RpcOptions
  ): UnaryCall<UpdateRequest, UpdateResponse> {
    const method = this.methods[0],
      opt = this._transport.mergeOptions(options);
    return stackIntercept<UpdateRequest, UpdateResponse>(
      'unary',
      this._transport,
      method,
      opt,
      input
    );
  }
  /**
   * Updates a bug state object for a given test group.
   *
   * @generated from protobuf rpc: UpdateBugs(UpdateRequest) returns (UpdateResponse);
   */
  updateBugs(
    input: UpdateRequest,
    options?: RpcOptions
  ): UnaryCall<UpdateRequest, UpdateResponse> {
    const method = this.methods[1],
      opt = this._transport.mergeOptions(options);
    return stackIntercept<UpdateRequest, UpdateResponse>(
      'unary',
      this._transport,
      method,
      opt,
      input
    );
  }
}
