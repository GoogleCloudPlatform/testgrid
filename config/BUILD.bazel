load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "config.go",
        "converge.go",
        "fields.go",
        "queue.go",
    ],
    importpath = "github.com/GoogleCloudPlatform/testgrid/config",
    visibility = ["//visibility:public"],
    deps = [
        "//pb/config:go_default_library",
        "//util:go_default_library",
        "//util/gcs:go_default_library",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@com_github_hashicorp_go_multierror//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_google_cloud_go_storage//:go_default_library",
        "@org_bitbucket_creachadair_stringset//:go_default_library",
        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//config/print:all-srcs",
        "//config/yamlcfg:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "go_default_test",
    srcs = [
        "config_test.go",
        "converge_test.go",
        "fields_test.go",
        "queue_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//pb/config:go_default_library",
        "@com_github_golang_protobuf//proto:go_default_library",
        "@com_github_google_go_cmp//cmp:go_default_library",
        "@com_github_hashicorp_go_multierror//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@org_golang_google_protobuf//testing/protocmp:go_default_library",
    ],
)
